{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport NotificationCategoriesModule from \"./NotificationCategoriesModule.native\";\nexport default function setNotificationCategoryAsync(identifier, actions, options) {\n  return _regeneratorRuntime.async(function setNotificationCategoryAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        if (NotificationCategoriesModule.setNotificationCategoryAsync) {\n          _context.next = 2;\n          break;\n        }\n        throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n      case 2:\n        _context.next = 4;\n        return _regeneratorRuntime.awrap(NotificationCategoriesModule.setNotificationCategoryAsync(identifier, actions, options));\n      case 4:\n        return _context.abrupt(\"return\", _context.sent);\n      case 5:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["UnavailabilityError","NotificationCategoriesModule","setNotificationCategoryAsync","identifier","actions","options","_regeneratorRuntime","async","setNotificationCategoryAsync$","_context","prev","next","awrap","abrupt","sent","stop","Promise"],"sources":["C:\\Users\\alexd\\Documents\\InstagramClone\\frontend\\node_modules\\expo-notifications\\src\\setNotificationCategoryAsync.ts"],"sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport NotificationCategoriesModule from './NotificationCategoriesModule.native';\nimport { NotificationCategory, NotificationAction } from './Notifications.types';\n\nexport default async function setNotificationCategoryAsync(\n  identifier: string,\n  actions: NotificationAction[],\n  options?: {\n    previewPlaceholder?: string;\n    intentIdentifiers?: string[];\n    categorySummaryFormat?: string;\n    customDismissAction?: boolean;\n    allowInCarPlay?: boolean;\n    showTitle?: boolean;\n    showSubtitle?: boolean;\n    allowAnnouncement?: boolean;\n  }\n): Promise<NotificationCategory> {\n  if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n    throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n  }\n\n  return await NotificationCategoriesModule.setNotificationCategoryAsync(\n    identifier,\n    actions,\n    options\n  );\n}\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AAEtD,OAAOC,4BAA4B;AAGnC,eAAe,SAAeC,4BAA4BA,CACxDC,UAAkB,EAClBC,OAA6B,EAC7BC,OASC;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,8BAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAAA,IAEIV,4BAA4B,CAACC,4BAA4B;UAAAO,QAAA,CAAAE,IAAA;UAAA;QAAA;QAAA,MACtD,IAAIX,mBAAmB,CAAC,eAAe,EAAE,8BAA8B,CAAC;MAAA;QAAAS,QAAA,CAAAE,IAAA;QAAA,OAAAL,mBAAA,CAAAM,KAAA,CAGnEX,4BAA4B,CAACC,4BAA4B,CACpEC,UAAU,EACVC,OAAO,EACPC,OAAO,CACR;MAAA;QAAA,OAAAI,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAK,IAAA;MAAA;MAAA;QAAA,OAAAL,QAAA,CAAAM,IAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}