{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { __awaiter, __rest } from \"tslib\";\nimport { Audio, Video } from 'expo-av';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ControlStates, ErrorSeverity, PlaybackStates } from \"./constants\";\nimport { ErrorMessage, TouchableButton, deepMerge, getMinutesSecondsFromMilliseconds, styles } from \"./utils\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { defaultProps } from \"./props\";\nimport { useEffect, useRef, useState } from 'react';\nimport React from 'react';\nimport Slider from '@react-native-community/slider';\nvar VideoPlayer = function VideoPlayer(tempProps) {\n  var props = deepMerge(defaultProps, tempProps);\n  var playbackInstance = null;\n  var controlsTimer = null;\n  var initialShow = props.defaultControlsVisible;\n  var header = props.header;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    errorMessage = _useState2[0],\n    setErrorMessage = _useState2[1];\n  var controlsOpacity = useRef(new Animated.Value(props.defaultControlsVisible ? 1 : 0)).current;\n  var _useState3 = useState(props.defaultControlsVisible ? ControlStates.Visible : ControlStates.Hidden),\n    _useState4 = _slicedToArray(_useState3, 2),\n    controlsState = _useState4[0],\n    setControlsState = _useState4[1];\n  var _useState5 = useState({\n      position: 0,\n      duration: 0,\n      state: props.videoProps.source ? PlaybackStates.Loading : PlaybackStates.Error\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    playbackInstanceInfo = _useState6[0],\n    setPlaybackInstanceInfo = _useState6[1];\n  var _a = props.slider,\n    sliderRef = _a.ref,\n    sliderProps = __rest(_a, [\"ref\"]);\n  var screenRatio = props.style.width / props.style.height;\n  var videoHeight = props.style.height;\n  var videoWidth = videoHeight * screenRatio;\n  if (videoWidth > props.style.width) {\n    videoWidth = props.style.width;\n    videoHeight = videoWidth / screenRatio;\n  }\n  useEffect(function () {\n    setAudio();\n    return function () {\n      if (playbackInstance) {\n        playbackInstance.setStatusAsync({\n          shouldPlay: false\n        });\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (!props.videoProps.source) {\n      console.error('[VideoPlayer] `Source` is a required in `videoProps`. ' + 'Check https://docs.expo.io/versions/latest/sdk/video/#usage');\n      setErrorMessage('`Source` is a required in `videoProps`');\n      setPlaybackInstanceInfo(_extends(_extends({}, playbackInstanceInfo), {\n        state: PlaybackStates.Error\n      }));\n    } else {\n      setPlaybackInstanceInfo(_extends(_extends({}, playbackInstanceInfo), {\n        state: PlaybackStates.Playing\n      }));\n    }\n  }, [props.videoProps.source]);\n  var hideAnimation = function hideAnimation() {\n    Animated.timing(controlsOpacity, {\n      toValue: 0,\n      duration: props.animation.fadeOutDuration,\n      useNativeDriver: true\n    }).start(function (_ref) {\n      var finished = _ref.finished;\n      if (finished) {\n        setControlsState(ControlStates.Hidden);\n      }\n    });\n  };\n  var animationToggle = function animationToggle() {\n    if (controlsState === ControlStates.Hidden) {\n      Animated.timing(controlsOpacity, {\n        toValue: 1,\n        duration: props.animation.fadeInDuration,\n        useNativeDriver: true\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n        if (finished) {\n          setControlsState(ControlStates.Visible);\n        }\n      });\n    } else if (controlsState === ControlStates.Visible) {\n      hideAnimation();\n    }\n    if (controlsTimer === null && props.autoHidePlayer) {\n      controlsTimer = setTimeout(function () {\n        if (playbackInstanceInfo.state === PlaybackStates.Playing && controlsState === ControlStates.Hidden) {\n          hideAnimation();\n        }\n        if (controlsTimer) {\n          clearTimeout(controlsTimer);\n        }\n        controlsTimer = null;\n      }, 2000);\n    }\n  };\n  var setAudio = function setAudio() {\n    return __awaiter(void 0, void 0, void 0, _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return Audio.setAudioModeAsync({\n              playsInSilentModeIOS: true\n            });\n          case 3:\n            _context.next = 8;\n            break;\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            props.errorCallback({\n              type: ErrorSeverity.NonFatal,\n              message: 'Audio.setAudioModeAsync',\n              obj: _context.t0\n            });\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n  };\n  var updatePlaybackCallback = function updatePlaybackCallback(status) {\n    props.playbackCallback(status);\n    if (status.isLoaded) {\n      setPlaybackInstanceInfo(_extends(_extends({}, playbackInstanceInfo), {\n        position: status.positionMillis,\n        duration: status.durationMillis || 0,\n        state: status.positionMillis === status.durationMillis ? PlaybackStates.Ended : status.isBuffering ? PlaybackStates.Buffering : status.shouldPlay ? PlaybackStates.Playing : PlaybackStates.Paused\n      }));\n      if (status.didJustFinish && controlsState === ControlStates.Hidden || status.isBuffering && controlsState === ControlStates.Hidden && initialShow) {\n        animationToggle();\n        initialShow = false;\n      }\n    } else {\n      if (status.isLoaded === false && status.error) {\n        var errorMsg = \"Encountered a fatal error during playback: \" + status.error;\n        setErrorMessage(errorMsg);\n        props.errorCallback({\n          type: ErrorSeverity.Fatal,\n          message: errorMsg,\n          obj: {}\n        });\n      }\n    }\n  };\n  var togglePlay = function togglePlay() {\n    return __awaiter(void 0, void 0, void 0, _regeneratorRuntime.mark(function _callee2() {\n      var shouldPlay;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(controlsState === ControlStates.Hidden)) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 2:\n            shouldPlay = playbackInstanceInfo.state !== PlaybackStates.Playing;\n            if (!(playbackInstance !== null)) {\n              _context2.next = 8;\n              break;\n            }\n            _context2.next = 6;\n            return playbackInstance.setStatusAsync(_extends({\n              shouldPlay: shouldPlay\n            }, playbackInstanceInfo.state === PlaybackStates.Ended && {\n              positionMillis: 0\n            }));\n          case 6:\n            setPlaybackInstanceInfo(_extends(_extends({}, playbackInstanceInfo), {\n              state: playbackInstanceInfo.state === PlaybackStates.Playing ? PlaybackStates.Paused : PlaybackStates.Playing\n            }));\n            if (shouldPlay) {\n              animationToggle();\n            }\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n  };\n  if (playbackInstanceInfo.state === PlaybackStates.Error) {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: props.style.videoBackgroundColor,\n        width: videoWidth,\n        height: videoHeight\n      }\n    }, React.createElement(ErrorMessage, {\n      style: props.textStyle,\n      message: errorMessage\n    }));\n  }\n  if (playbackInstanceInfo.state === PlaybackStates.Loading) {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: props.style.controlsBackgroundColor,\n        width: videoWidth,\n        height: videoHeight,\n        justifyContent: 'center'\n      }\n    }, props.icon.loading || React.createElement(ActivityIndicator, props.activityIndicator));\n  }\n  return React.createElement(View, {\n    style: {\n      backgroundColor: props.style.videoBackgroundColor,\n      width: videoWidth,\n      height: videoHeight,\n      maxWidth: '100%'\n    }\n  }, React.createElement(Video, _extends({\n    style: styles.videoWrapper\n  }, props.videoProps, {\n    ref: function ref(component) {\n      playbackInstance = component;\n      if (props.videoProps.ref) {\n        props.videoProps.ref.current = component;\n      }\n    },\n    onPlaybackStatusUpdate: updatePlaybackCallback\n  })), React.createElement(Animated.View, {\n    pointerEvents: controlsState === ControlStates.Visible ? 'auto' : 'none',\n    style: [styles.topInfoWrapper, {\n      opacity: controlsOpacity\n    }]\n  }, header), React.createElement(TouchableWithoutFeedback, {\n    onPress: animationToggle\n  }, React.createElement(Animated.View, {\n    style: _extends(_extends({}, StyleSheet.absoluteFillObject), {\n      opacity: controlsOpacity,\n      justifyContent: 'center',\n      alignItems: 'center'\n    })\n  }, React.createElement(View, {\n    style: _extends(_extends({}, StyleSheet.absoluteFillObject), {\n      backgroundColor: props.style.controlsBackgroundColor,\n      opacity: 0.5\n    })\n  }), React.createElement(View, {\n    pointerEvents: controlsState === ControlStates.Visible ? 'auto' : 'none'\n  }, React.createElement(View, {\n    style: styles.iconWrapper\n  }, React.createElement(TouchableButton, {\n    onPress: togglePlay\n  }, React.createElement(View, null, playbackInstanceInfo.state === PlaybackStates.Buffering && (props.icon.loading || React.createElement(ActivityIndicator, props.activityIndicator)), playbackInstanceInfo.state === PlaybackStates.Playing && props.icon.pause, playbackInstanceInfo.state === PlaybackStates.Paused && props.icon.play, playbackInstanceInfo.state === PlaybackStates.Ended && props.icon.replay, (playbackInstanceInfo.state === PlaybackStates.Ended && !props.icon.replay || playbackInstanceInfo.state === PlaybackStates.Playing && !props.icon.pause || playbackInstanceInfo.state === PlaybackStates.Paused && !props.icon.pause) && React.createElement(MaterialIcons, {\n    name: playbackInstanceInfo.state === PlaybackStates.Playing ? 'pause' : playbackInstanceInfo.state === PlaybackStates.Paused ? 'play-arrow' : 'replay',\n    style: props.icon.style,\n    size: props.icon.size,\n    color: props.icon.color\n  }))))))), React.createElement(Animated.View, {\n    pointerEvents: controlsState === ControlStates.Visible ? 'auto' : 'none',\n    style: [styles.bottomInfoWrapper, {\n      opacity: controlsOpacity\n    }]\n  }, props.timeVisible && React.createElement(Text, {\n    style: [props.textStyle, styles.timeLeft]\n  }, getMinutesSecondsFromMilliseconds(playbackInstanceInfo.position)), props.slider.visible && React.createElement(Slider, _extends({}, sliderProps, {\n    style: [styles.slider, props.slider.style],\n    value: playbackInstanceInfo.duration ? playbackInstanceInfo.position / playbackInstanceInfo.duration : 0,\n    onSlidingStart: function onSlidingStart() {\n      if (playbackInstanceInfo.state === PlaybackStates.Playing) {\n        togglePlay();\n        setPlaybackInstanceInfo(_extends(_extends({}, playbackInstanceInfo), {\n          state: PlaybackStates.Paused\n        }));\n      }\n    },\n    onSlidingComplete: function onSlidingComplete(e) {\n      return __awaiter(void 0, void 0, void 0, _regeneratorRuntime.mark(function _callee3() {\n        var position;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              position = e * playbackInstanceInfo.duration;\n              if (!playbackInstance) {\n                _context3.next = 4;\n                break;\n              }\n              _context3.next = 4;\n              return playbackInstance.setStatusAsync({\n                positionMillis: position,\n                shouldPlay: true\n              });\n            case 4:\n              setPlaybackInstanceInfo(_extends(_extends({}, playbackInstanceInfo), {\n                position: position\n              }));\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n    }\n  })), props.timeVisible && React.createElement(Text, {\n    style: [props.textStyle, styles.timeRight]\n  }, getMinutesSecondsFromMilliseconds(playbackInstanceInfo.duration)), props.mute.visible && React.createElement(TouchableButton, {\n    onPress: function onPress() {\n      var _a, _b, _c, _d;\n      return props.mute.isMute ? (_b = (_a = props.mute).exitMute) === null || _b === void 0 ? void 0 : _b.call(_a) : (_d = (_c = props.mute).enterMute) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n  }, React.createElement(View, null, props.icon.mute, props.icon.exitMute, (!props.icon.mute && props.mute.isMute || !props.icon.exitMute && !props.mute.isMute) && React.createElement(MaterialIcons, {\n    name: props.mute.isMute ? 'volume-up' : 'volume-off',\n    style: props.icon.style,\n    size: props.icon.size / 2,\n    color: props.icon.color\n  }))), props.fullscreen.visible && React.createElement(TouchableButton, {\n    onPress: function onPress() {\n      return props.fullscreen.inFullscreen ? props.fullscreen.exitFullscreen() : props.fullscreen.enterFullscreen();\n    }\n  }, React.createElement(View, null, !props.fullscreen.inFullscreen && props.icon.fullscreen, props.fullscreen.inFullscreen && props.icon.exitFullscreen, (!props.icon.fullscreen && !props.fullscreen.inFullscreen || !props.icon.exitFullscreen && props.fullscreen.inFullscreen) && React.createElement(MaterialIcons, {\n    name: props.fullscreen.inFullscreen ? 'fullscreen-exit' : 'fullscreen',\n    style: props.icon.style,\n    size: props.icon.size / 2,\n    color: props.icon.color\n  })))));\n};\nVideoPlayer.defaultProps = defaultProps;\nexport default VideoPlayer;","map":{"version":3,"names":["__awaiter","__rest","Audio","Video","ActivityIndicator","Animated","StyleSheet","Text","TouchableWithoutFeedback","View","ControlStates","ErrorSeverity","PlaybackStates","ErrorMessage","TouchableButton","deepMerge","getMinutesSecondsFromMilliseconds","styles","MaterialIcons","defaultProps","useEffect","useRef","useState","React","Slider","VideoPlayer","tempProps","props","playbackInstance","controlsTimer","initialShow","defaultControlsVisible","header","_useState","_useState2","_slicedToArray","errorMessage","setErrorMessage","controlsOpacity","Value","current","_useState3","Visible","Hidden","_useState4","controlsState","setControlsState","_useState5","position","duration","state","videoProps","source","Loading","Error","_useState6","playbackInstanceInfo","setPlaybackInstanceInfo","_a","slider","sliderRef","ref","sliderProps","screenRatio","style","width","height","videoHeight","videoWidth","setAudio","setStatusAsync","shouldPlay","console","error","_extends","Playing","hideAnimation","timing","toValue","animation","fadeOutDuration","useNativeDriver","start","_ref","finished","animationToggle","fadeInDuration","_ref2","autoHidePlayer","setTimeout","clearTimeout","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","setAudioModeAsync","playsInSilentModeIOS","t0","errorCallback","type","NonFatal","message","obj","stop","updatePlaybackCallback","status","playbackCallback","isLoaded","positionMillis","durationMillis","Ended","isBuffering","Buffering","Paused","didJustFinish","errorMsg","Fatal","togglePlay","_callee2","_callee2$","_context2","abrupt","createElement","backgroundColor","videoBackgroundColor","textStyle","controlsBackgroundColor","justifyContent","icon","loading","activityIndicator","maxWidth","videoWrapper","component","onPlaybackStatusUpdate","pointerEvents","topInfoWrapper","opacity","onPress","absoluteFillObject","alignItems","iconWrapper","pause","play","replay","name","size","color","bottomInfoWrapper","timeVisible","timeLeft","visible","value","onSlidingStart","onSlidingComplete","e","_callee3","_callee3$","_context3","timeRight","mute","_b","_c","_d","isMute","exitMute","call","enterMute","fullscreen","inFullscreen","exitFullscreen","enterFullscreen"],"sources":["C:/Users/alexd/Documents/InstagramClone/frontend/node_modules/expo-video-player/dist/index.js"],"sourcesContent":["import { __awaiter, __rest } from \"tslib\";\r\nimport { Audio, Video } from 'expo-av';\r\nimport { ActivityIndicator, Animated, StyleSheet, Text, TouchableWithoutFeedback, View, } from 'react-native';\r\nimport { ControlStates, ErrorSeverity, PlaybackStates } from './constants';\r\nimport { ErrorMessage, TouchableButton, deepMerge, getMinutesSecondsFromMilliseconds, styles, } from './utils';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { defaultProps } from './props';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport React from 'react';\r\nimport Slider from '@react-native-community/slider';\r\nconst VideoPlayer = (tempProps) => {\r\n    const props = deepMerge(defaultProps, tempProps);\r\n    let playbackInstance = null;\r\n    let controlsTimer = null;\r\n    let initialShow = props.defaultControlsVisible;\r\n    const header = props.header;\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const controlsOpacity = useRef(new Animated.Value(props.defaultControlsVisible ? 1 : 0)).current;\r\n    const [controlsState, setControlsState] = useState(props.defaultControlsVisible ? ControlStates.Visible : ControlStates.Hidden);\r\n    const [playbackInstanceInfo, setPlaybackInstanceInfo] = useState({\r\n        position: 0,\r\n        duration: 0,\r\n        state: props.videoProps.source ? PlaybackStates.Loading : PlaybackStates.Error,\r\n    });\r\n    // We need to extract ref, because of misstypes in <Slider />\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const _a = props.slider, { ref: sliderRef } = _a, sliderProps = __rest(_a, [\"ref\"]);\r\n    const screenRatio = props.style.width / props.style.height;\r\n    let videoHeight = props.style.height;\r\n    let videoWidth = videoHeight * screenRatio;\r\n    if (videoWidth > props.style.width) {\r\n        videoWidth = props.style.width;\r\n        videoHeight = videoWidth / screenRatio;\r\n    }\r\n    useEffect(() => {\r\n        setAudio();\r\n        return () => {\r\n            if (playbackInstance) {\r\n                playbackInstance.setStatusAsync({\r\n                    shouldPlay: false,\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n    useEffect(() => {\r\n        if (!props.videoProps.source) {\r\n            console.error('[VideoPlayer] `Source` is a required in `videoProps`. ' +\r\n                'Check https://docs.expo.io/versions/latest/sdk/video/#usage');\r\n            setErrorMessage('`Source` is a required in `videoProps`');\r\n            setPlaybackInstanceInfo(Object.assign(Object.assign({}, playbackInstanceInfo), { state: PlaybackStates.Error }));\r\n        }\r\n        else {\r\n            setPlaybackInstanceInfo(Object.assign(Object.assign({}, playbackInstanceInfo), { state: PlaybackStates.Playing }));\r\n        }\r\n    }, [props.videoProps.source]);\r\n    const hideAnimation = () => {\r\n        Animated.timing(controlsOpacity, {\r\n            toValue: 0,\r\n            duration: props.animation.fadeOutDuration,\r\n            useNativeDriver: true,\r\n        }).start(({ finished }) => {\r\n            if (finished) {\r\n                setControlsState(ControlStates.Hidden);\r\n            }\r\n        });\r\n    };\r\n    const animationToggle = () => {\r\n        if (controlsState === ControlStates.Hidden) {\r\n            Animated.timing(controlsOpacity, {\r\n                toValue: 1,\r\n                duration: props.animation.fadeInDuration,\r\n                useNativeDriver: true,\r\n            }).start(({ finished }) => {\r\n                if (finished) {\r\n                    setControlsState(ControlStates.Visible);\r\n                }\r\n            });\r\n        }\r\n        else if (controlsState === ControlStates.Visible) {\r\n            hideAnimation();\r\n        }\r\n        if (controlsTimer === null && props.autoHidePlayer) {\r\n            controlsTimer = setTimeout(() => {\r\n                if (playbackInstanceInfo.state === PlaybackStates.Playing &&\r\n                    controlsState === ControlStates.Hidden) {\r\n                    hideAnimation();\r\n                }\r\n                if (controlsTimer) {\r\n                    clearTimeout(controlsTimer);\r\n                }\r\n                controlsTimer = null;\r\n            }, 2000);\r\n        }\r\n    };\r\n    // Set audio mode to play even in silent mode (like the YouTube app)\r\n    const setAudio = () => __awaiter(void 0, void 0, void 0, function* () {\r\n        try {\r\n            yield Audio.setAudioModeAsync({\r\n                playsInSilentModeIOS: true,\r\n            });\r\n        }\r\n        catch (e) {\r\n            props.errorCallback({\r\n                type: ErrorSeverity.NonFatal,\r\n                message: 'Audio.setAudioModeAsync',\r\n                obj: e,\r\n            });\r\n        }\r\n    });\r\n    const updatePlaybackCallback = (status) => {\r\n        props.playbackCallback(status);\r\n        if (status.isLoaded) {\r\n            setPlaybackInstanceInfo(Object.assign(Object.assign({}, playbackInstanceInfo), { position: status.positionMillis, duration: status.durationMillis || 0, state: status.positionMillis === status.durationMillis\r\n                    ? PlaybackStates.Ended\r\n                    : status.isBuffering\r\n                        ? PlaybackStates.Buffering\r\n                        : status.shouldPlay\r\n                            ? PlaybackStates.Playing\r\n                            : PlaybackStates.Paused }));\r\n            if ((status.didJustFinish && controlsState === ControlStates.Hidden) ||\r\n                (status.isBuffering && controlsState === ControlStates.Hidden && initialShow)) {\r\n                animationToggle();\r\n                initialShow = false;\r\n            }\r\n        }\r\n        else {\r\n            if (status.isLoaded === false && status.error) {\r\n                const errorMsg = `Encountered a fatal error during playback: ${status.error}`;\r\n                setErrorMessage(errorMsg);\r\n                props.errorCallback({ type: ErrorSeverity.Fatal, message: errorMsg, obj: {} });\r\n            }\r\n        }\r\n    };\r\n    const togglePlay = () => __awaiter(void 0, void 0, void 0, function* () {\r\n        if (controlsState === ControlStates.Hidden) {\r\n            return;\r\n        }\r\n        const shouldPlay = playbackInstanceInfo.state !== PlaybackStates.Playing;\r\n        if (playbackInstance !== null) {\r\n            yield playbackInstance.setStatusAsync(Object.assign({ shouldPlay }, (playbackInstanceInfo.state === PlaybackStates.Ended && { positionMillis: 0 })));\r\n            setPlaybackInstanceInfo(Object.assign(Object.assign({}, playbackInstanceInfo), { state: playbackInstanceInfo.state === PlaybackStates.Playing\r\n                    ? PlaybackStates.Paused\r\n                    : PlaybackStates.Playing }));\r\n            if (shouldPlay) {\r\n                animationToggle();\r\n            }\r\n        }\r\n    });\r\n    if (playbackInstanceInfo.state === PlaybackStates.Error) {\r\n        return (<View style={{\r\n                backgroundColor: props.style.videoBackgroundColor,\r\n                width: videoWidth,\r\n                height: videoHeight,\r\n            }}>\n        <ErrorMessage style={props.textStyle} message={errorMessage}/>\n      </View>);\r\n    }\r\n    if (playbackInstanceInfo.state === PlaybackStates.Loading) {\r\n        return (<View style={{\r\n                backgroundColor: props.style.controlsBackgroundColor,\r\n                width: videoWidth,\r\n                height: videoHeight,\r\n                justifyContent: 'center',\r\n            }}>\n        {props.icon.loading || <ActivityIndicator {...props.activityIndicator}/>}\n      </View>);\r\n    }\r\n    return (<View style={{\r\n            backgroundColor: props.style.videoBackgroundColor,\r\n            width: videoWidth,\r\n            height: videoHeight,\r\n            maxWidth: '100%',\r\n        }}>\n      <Video style={styles.videoWrapper} {...props.videoProps} ref={component => {\r\n            playbackInstance = component;\r\n            if (props.videoProps.ref) {\r\n                props.videoProps.ref.current = component;\r\n            }\r\n        }} onPlaybackStatusUpdate={updatePlaybackCallback}/>\n\n      <Animated.View pointerEvents={controlsState === ControlStates.Visible ? 'auto' : 'none'} style={[\r\n            styles.topInfoWrapper,\r\n            {\r\n                opacity: controlsOpacity,\r\n            },\r\n        ]}>\n        {header}\n      </Animated.View>\n\n      <TouchableWithoutFeedback onPress={animationToggle}>\n        <Animated.View style={Object.assign(Object.assign({}, StyleSheet.absoluteFillObject), { opacity: controlsOpacity, justifyContent: 'center', alignItems: 'center' })}>\n          <View style={Object.assign(Object.assign({}, StyleSheet.absoluteFillObject), { backgroundColor: props.style.controlsBackgroundColor, opacity: 0.5 })}/>\n          <View pointerEvents={controlsState === ControlStates.Visible ? 'auto' : 'none'}>\n            <View style={styles.iconWrapper}>\n              <TouchableButton onPress={togglePlay}>\n                <View>\n                  {playbackInstanceInfo.state === PlaybackStates.Buffering &&\r\n            (props.icon.loading || <ActivityIndicator {...props.activityIndicator}/>)}\n                  {playbackInstanceInfo.state === PlaybackStates.Playing && props.icon.pause}\n                  {playbackInstanceInfo.state === PlaybackStates.Paused && props.icon.play}\n                  {playbackInstanceInfo.state === PlaybackStates.Ended && props.icon.replay}\n                  {((playbackInstanceInfo.state === PlaybackStates.Ended && !props.icon.replay) ||\r\n            (playbackInstanceInfo.state === PlaybackStates.Playing && !props.icon.pause) ||\r\n            (playbackInstanceInfo.state === PlaybackStates.Paused &&\r\n                !props.icon.pause)) && (<MaterialIcons name={playbackInstanceInfo.state === PlaybackStates.Playing\r\n                ? 'pause'\r\n                : playbackInstanceInfo.state === PlaybackStates.Paused\r\n                    ? 'play-arrow'\r\n                    : 'replay'} style={props.icon.style} size={props.icon.size} color={props.icon.color}/>)}\n                </View>\n              </TouchableButton>\n            </View>\n          </View>\n        </Animated.View>\n      </TouchableWithoutFeedback>\n\n      <Animated.View pointerEvents={controlsState === ControlStates.Visible ? 'auto' : 'none'} style={[\r\n            styles.bottomInfoWrapper,\r\n            {\r\n                opacity: controlsOpacity,\r\n            },\r\n        ]}>\n        {props.timeVisible && (<Text style={[props.textStyle, styles.timeLeft]}>\n            {getMinutesSecondsFromMilliseconds(playbackInstanceInfo.position)}\n          </Text>)}\n        {props.slider.visible && (<Slider {...sliderProps} style={[styles.slider, props.slider.style]} value={playbackInstanceInfo.duration\r\n                ? playbackInstanceInfo.position / playbackInstanceInfo.duration\r\n                : 0} onSlidingStart={() => {\r\n                if (playbackInstanceInfo.state === PlaybackStates.Playing) {\r\n                    togglePlay();\r\n                    setPlaybackInstanceInfo(Object.assign(Object.assign({}, playbackInstanceInfo), { state: PlaybackStates.Paused }));\r\n                }\r\n            }} onSlidingComplete={(e) => __awaiter(void 0, void 0, void 0, function* () {\r\n                const position = e * playbackInstanceInfo.duration;\r\n                if (playbackInstance) {\r\n                    yield playbackInstance.setStatusAsync({\r\n                        positionMillis: position,\r\n                        shouldPlay: true,\r\n                    });\r\n                }\r\n                setPlaybackInstanceInfo(Object.assign(Object.assign({}, playbackInstanceInfo), { position }));\r\n            })}/>)}\n        {props.timeVisible && (<Text style={[props.textStyle, styles.timeRight]}>\n            {getMinutesSecondsFromMilliseconds(playbackInstanceInfo.duration)}\n          </Text>)}\n        {props.mute.visible && (<TouchableButton onPress={() => { var _a, _b, _c, _d; return (props.mute.isMute ? (_b = (_a = props.mute).exitMute) === null || _b === void 0 ? void 0 : _b.call(_a) : (_d = (_c = props.mute).enterMute) === null || _d === void 0 ? void 0 : _d.call(_c)); }}>\n            <View>\n              {props.icon.mute}\n              {props.icon.exitMute}\n              {((!props.icon.mute && props.mute.isMute) ||\r\n                (!props.icon.exitMute && !props.mute.isMute)) && (<MaterialIcons name={props.mute.isMute ? 'volume-up' : 'volume-off'} style={props.icon.style} size={props.icon.size / 2} color={props.icon.color}/>)}\n            </View>\n          </TouchableButton>)}\n        {props.fullscreen.visible && (<TouchableButton onPress={() => props.fullscreen.inFullscreen\r\n                ? props.fullscreen.exitFullscreen()\r\n                : props.fullscreen.enterFullscreen()}>\n            <View>\n              {!props.fullscreen.inFullscreen && props.icon.fullscreen}\n              {props.fullscreen.inFullscreen && props.icon.exitFullscreen}\n              {((!props.icon.fullscreen && !props.fullscreen.inFullscreen) ||\r\n                (!props.icon.exitFullscreen && props.fullscreen.inFullscreen)) && (<MaterialIcons name={props.fullscreen.inFullscreen ? 'fullscreen-exit' : 'fullscreen'} style={props.icon.style} size={props.icon.size / 2} color={props.icon.color}/>)}\n            </View>\n          </TouchableButton>)}\n      </Animated.View>\n    </View>);\r\n};\r\nVideoPlayer.defaultProps = defaultProps;\r\nexport default VideoPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}