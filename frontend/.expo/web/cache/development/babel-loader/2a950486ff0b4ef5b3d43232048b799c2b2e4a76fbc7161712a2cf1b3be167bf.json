{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { CodedError } from '@unimodules/core';\nimport { v4 as uuidv4 } from 'uuid';\nvar INSTALLATION_ID_KEY = 'EXPO_NOTIFICATIONS_INSTALLATION_ID';\nvar REGISTRATION_INFO_KEY = 'EXPO_NOTIFICATIONS_REGISTRATION_INFO';\nvar _getFallbackInstallationId = function getFallbackInstallationId() {\n  var sessionInstallationId = uuidv4();\n  _getFallbackInstallationId = function getFallbackInstallationId() {\n    return sessionInstallationId;\n  };\n};\nexport default {\n  getInstallationIdAsync: function getInstallationIdAsync() {\n    var installationId;\n    return _regeneratorRuntime.async(function getInstallationIdAsync$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            installationId = localStorage.getItem(INSTALLATION_ID_KEY);\n            if (!installationId || typeof installationId !== 'string') {\n              installationId = uuidv4();\n              localStorage.setItem(INSTALLATION_ID_KEY, installationId);\n            }\n          } catch (error) {\n            installationId = _getFallbackInstallationId();\n          }\n          return _context.abrupt(\"return\", installationId);\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  },\n  getRegistrationInfoAsync: function getRegistrationInfoAsync() {\n    return _regeneratorRuntime.async(function getRegistrationInfoAsync$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", localStorage.getItem(REGISTRATION_INFO_KEY));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, Promise);\n  },\n  setRegistrationInfoAsync: function setRegistrationInfoAsync(registrationInfo) {\n    return _regeneratorRuntime.async(function setRegistrationInfoAsync$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          if (registrationInfo) {\n            localStorage.setItem(REGISTRATION_INFO_KEY, registrationInfo);\n          } else {\n            localStorage.removeItem(REGISTRATION_INFO_KEY);\n          }\n          _context3.next = 7;\n          break;\n        case 4:\n          _context3.prev = 4;\n          _context3.t0 = _context3[\"catch\"](0);\n          throw new CodedError('ERR_NOTIFICATIONS_STORAGE_ERROR', \"Could not modify localStorage to persist auto-registration information: \" + _context3.t0);\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, null, null, [[0, 4]], Promise);\n  },\n  addListener: function addListener() {},\n  removeListeners: function removeListeners() {}\n};","map":{"version":3,"names":["CodedError","v4","uuidv4","INSTALLATION_ID_KEY","REGISTRATION_INFO_KEY","getFallbackInstallationId","sessionInstallationId","getInstallationIdAsync","installationId","_regeneratorRuntime","async","getInstallationIdAsync$","_context","prev","next","localStorage","getItem","setItem","error","abrupt","stop","Promise","getRegistrationInfoAsync","getRegistrationInfoAsync$","_context2","setRegistrationInfoAsync","registrationInfo","setRegistrationInfoAsync$","_context3","removeItem","t0","addListener","removeListeners"],"sources":["C:\\Users\\alexd\\Documents\\InstagramClone\\frontend\\node_modules\\expo-notifications\\src\\ServerRegistrationModule.web.ts"],"sourcesContent":["import { CodedError } from '@unimodules/core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { ServerRegistrationModule } from './ServerRegistrationModule.types';\n\nconst INSTALLATION_ID_KEY = 'EXPO_NOTIFICATIONS_INSTALLATION_ID';\nconst REGISTRATION_INFO_KEY = 'EXPO_NOTIFICATIONS_REGISTRATION_INFO';\n\n// Lazy fallback installationId per session initializer\nlet getFallbackInstallationId = () => {\n  const sessionInstallationId = uuidv4();\n  getFallbackInstallationId = () => sessionInstallationId;\n};\n\nexport default {\n  getInstallationIdAsync: async () => {\n    let installationId;\n\n    try {\n      installationId = localStorage.getItem(INSTALLATION_ID_KEY);\n      if (!installationId || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(INSTALLATION_ID_KEY, installationId);\n      }\n    } catch (error) {\n      installationId = getFallbackInstallationId();\n    }\n\n    return installationId;\n  },\n  getRegistrationInfoAsync: async () => {\n    return localStorage.getItem(REGISTRATION_INFO_KEY);\n  },\n  setRegistrationInfoAsync: async (registrationInfo: string | null) => {\n    try {\n      if (registrationInfo) {\n        localStorage.setItem(REGISTRATION_INFO_KEY, registrationInfo);\n      } else {\n        localStorage.removeItem(REGISTRATION_INFO_KEY);\n      }\n    } catch (error) {\n      throw new CodedError(\n        'ERR_NOTIFICATIONS_STORAGE_ERROR',\n        `Could not modify localStorage to persist auto-registration information: ${error}`\n      );\n    }\n  },\n  // mock implementations\n  addListener: () => {},\n  removeListeners: () => {},\n} as ServerRegistrationModule;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAInC,IAAMC,mBAAmB,GAAG,oCAAoC;AAChE,IAAMC,qBAAqB,GAAG,sCAAsC;AAGpE,IAAIC,0BAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAQ;EACnC,IAAMC,qBAAqB,GAAGJ,MAAM,EAAE;EACtCG,0BAAyB,GAAG,SAA5BA,yBAAyBA,CAAA;IAAA,OAASC,qBAAqB;EAAA;AACzD,CAAC;AAED,eAAe;EACbC,sBAAsB,EAAE,SAAxBA,sBAAsBA,CAAA;IAAA,IAAAC,cAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,wBAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAGpB,IAAI;YACFN,cAAc,GAAGO,YAAY,CAACC,OAAO,CAACb,mBAAmB,CAAC;YAC1D,IAAI,CAACK,cAAc,IAAI,OAAOA,cAAc,KAAK,QAAQ,EAAE;cACzDA,cAAc,GAAGN,MAAM,EAAE;cACzBa,YAAY,CAACE,OAAO,CAACd,mBAAmB,EAAEK,cAAc,CAAC;;WAE5D,CAAC,OAAOU,KAAK,EAAE;YACdV,cAAc,GAAGH,0BAAyB,EAAE;;UAC7C,OAAAO,QAAA,CAAAO,MAAA,WAEMX,cAAc;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAQ,IAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA,CACtB;EACDC,wBAAwB,EAAE,SAA1BA,wBAAwBA,CAAA;IAAA,OAAAb,mBAAA,CAAAC,KAAA,UAAAa,0BAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAX,IAAA,GAAAW,SAAA,CAAAV,IAAA;QAAA;UAAA,OAAAU,SAAA,CAAAL,MAAA,WACfJ,YAAY,CAACC,OAAO,CAACZ,qBAAqB,CAAC;QAAA;QAAA;UAAA,OAAAoB,SAAA,CAAAJ,IAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA,CACnD;EACDI,wBAAwB,EAAE,SAA1BA,wBAAwBA,CAASC,gBAA+B;IAAA,OAAAjB,mBAAA,CAAAC,KAAA,UAAAiB,0BAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;QAAA;UAAAc,SAAA,CAAAf,IAAA;UAE5D,IAAIa,gBAAgB,EAAE;YACpBX,YAAY,CAACE,OAAO,CAACb,qBAAqB,EAAEsB,gBAAgB,CAAC;WAC9D,MAAM;YACLX,YAAY,CAACc,UAAU,CAACzB,qBAAqB,CAAC;;UAC/CwB,SAAA,CAAAd,IAAA;UAAA;QAAA;UAAAc,SAAA,CAAAf,IAAA;UAAAe,SAAA,CAAAE,EAAA,GAAAF,SAAA;UAAA,MAEK,IAAI5B,UAAU,CAClB,iCAAiC,+EAAA4B,SAAA,CAAAE,EACiD,CACnF;QAAA;QAAA;UAAA,OAAAF,SAAA,CAAAR,IAAA;MAAA;IAAA,yBAAAC,OAAA;EAAA,CAEJ;EAEDU,WAAW,EAAE,SAAbA,WAAWA,CAAA,EAAO,CAAE,CAAC;EACrBC,eAAe,EAAE,SAAjBA,eAAeA,CAAA,EAAO,CAAE;CACG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}