{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Divider } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from \"../../../redux/actions/index\";\nimport { container, text, utils } from \"../../styles\";\nimport { timeDifference } from \"../../utils\";\nimport CachedImage from \"../random/CachedImage\";\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, collection, doc, updateDoc, addDoc } from 'firebase/firestore';\nvar auth = getAuth();\nvar db = getFirestore();\nfunction Chat(props) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chats = _useState2[0],\n    setChats = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    textInput = _useState6[0],\n    setTextInput = _useState6[1];\n  useEffect(function () {\n    var _loop = function _loop() {\n      if (props.chats[i].hasOwnProperty('otherUser')) return 1;\n      var otherUserId;\n      if (props.chats[i].users[0] === auth.currentUser.uid) {\n        otherUserId = props.chats[i].users[1];\n      } else {\n        otherUserId = props.chats[i].users[0];\n      }\n      var user = props.users.find(function (x) {\n        return x.uid === otherUserId;\n      });\n      if (!user) {\n        props.fetchUsersData(otherUserId, false);\n      } else {\n        props.chats[i].otherUser = user;\n      }\n    };\n    for (var i = 0; i < props.chats.length; i++) {\n      if (_loop()) continue;\n    }\n    setChats(props.chats);\n  }, [props.chats, props.users]);\n  var sendPost = function sendPost(item) {\n    var textToSend, post, chatMessagesRef, chatRef;\n    return _regeneratorRuntime.async(function sendPost$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!item.sent) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 2:\n          textToSend = input;\n          setInput(\"\");\n          textInput.clear();\n          post = _objectSpread({}, props.route.params.post);\n          delete post.doc;\n          chatMessagesRef = collection(db, 'chats', item.id, 'messages');\n          chatRef = doc(db, 'chats', item.id);\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(addDoc(chatMessagesRef, {\n            creator: auth.currentUser.uid,\n            text: textToSend,\n            post: post,\n            creation: new Date()\n          }));\n        case 11:\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(updateDoc(chatRef, {\n            lastMessage: \"post sent\",\n            lastMessageTimestamp: new Date()\n          }));\n        case 13:\n          props.navigation.popToTop();\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  var share = false;\n  var item = null;\n  if (props.route.params) {\n    share = props.route.params.share;\n    item = props.route.params.post;\n  }\n  if (!chats.length) {\n    return React.createElement(View, {\n      style: {\n        height: '100%',\n        justifyContent: 'center',\n        margin: 'auto'\n      }\n    }, React.createElement(FontAwesome5, {\n      style: {\n        alignSelf: 'center',\n        marginBottom: 20\n      },\n      name: \"comments\",\n      size: 40,\n      color: \"black\"\n    }), React.createElement(Text, {\n      style: [text.notAvailable]\n    }, \"No chats available\"));\n  }\n  return React.createElement(View, {\n    style: [container.container, container.alignItemsCenter, utils.backgroundWhite]\n  }, item && React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      padding: 20\n    }\n  }, React.createElement(TextInput, {\n    style: [container.fillHorizontal, container.input, container.container],\n    multiline: true,\n    ref: setTextInput,\n    placeholder: \"Write a message . . .\",\n    onChangeText: function onChangeText(caption) {\n      return setInput(caption);\n    }\n  }), item.type === 1 ? React.createElement(Image, {\n    style: {\n      aspectRatio: 1,\n      backgroundColor: 'black',\n      height: 80\n    },\n    source: {\n      uri: props.route.params.post.downloadURL\n    }\n  }) : React.createElement(CachedImage, {\n    cacheKey: item.id,\n    style: {\n      aspectRatio: 1,\n      height: 80\n    },\n    source: {\n      uri: props.route.params.post.downloadURLStill\n    }\n  })), React.createElement(Divider, null), React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: chats,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: !item[auth.currentUser.uid] ? {\n          backgroundColor: '#d2eeff'\n        } : null\n      }, !item.otherUser ? React.createElement(FontAwesome5, {\n        style: [utils.profileImageSmall],\n        name: \"user-circle\",\n        size: 35,\n        color: \"black\"\n      }) : React.createElement(TouchableOpacity, {\n        style: [utils.padding15, container.horizontal],\n        activeOpacity: share ? 1 : 0,\n        onPress: function onPress() {\n          if (!share) {\n            props.navigation.navigate(\"Chat\", {\n              user: item.otherUser\n            });\n          }\n        }\n      }, React.createElement(View, {\n        style: container.horizontal\n      }, item.otherUser.image === 'default' ? React.createElement(FontAwesome5, {\n        style: [utils.profileImageSmall],\n        name: \"user-circle\",\n        size: 35,\n        color: \"black\"\n      }) : React.createElement(Image, {\n        style: [utils.profileImageSmall],\n        source: {\n          uri: item.otherUser.image\n        }\n      })), React.createElement(View, null, React.createElement(Text, {\n        style: [text.bold]\n      }, item.otherUser.name), React.createElement(Text, {\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        style: [utils.margin15Right, utils.margin5Bottom, {\n          paddingBottom: 10\n        }]\n      }, item.lastMessage, \" \", item.lastMessageTimestamp ? React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom]\n      }, timeDifference(new Date(), item.lastMessageTimestamp.toDate())) : React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom]\n      }, \"Now\"))), share && React.createElement(TouchableOpacity, {\n        style: [utils.buttonOutlined, utils.margin15Right, {\n          backgroundColor: '#0095ff',\n          marginLeft: 'auto',\n          justifyContent: 'center'\n        }],\n        onPress: function onPress() {\n          return sendPost(item);\n        }\n      }, React.createElement(Text, {\n        style: [text.bold, {\n          color: 'white',\n          textAlign: 'center',\n          textAlignVertical: 'center'\n        }]\n      }, \"Send\"))));\n    }\n  }));\n}\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    users: store.usersState.users\n  };\n};\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);","map":{"version":3,"names":["FontAwesome5","React","useEffect","useState","FlatList","Image","Text","TouchableOpacity","View","TextInput","Divider","connect","bindActionCreators","fetchUsersData","container","text","utils","timeDifference","CachedImage","getAuth","getFirestore","collection","doc","updateDoc","addDoc","auth","db","Chat","props","_useState","_useState2","_slicedToArray","chats","setChats","_useState3","_useState4","input","setInput","_useState5","_useState6","textInput","setTextInput","_loop","i","hasOwnProperty","otherUserId","users","currentUser","uid","user","find","x","otherUser","length","sendPost","item","textToSend","post","chatMessagesRef","chatRef","_regeneratorRuntime","async","sendPost$","_context","prev","next","sent","abrupt","clear","_objectSpread","route","params","id","awrap","creator","creation","Date","lastMessage","lastMessageTimestamp","navigation","popToTop","stop","Promise","share","createElement","style","height","justifyContent","margin","alignSelf","marginBottom","name","size","color","notAvailable","alignItemsCenter","backgroundWhite","flexDirection","padding","fillHorizontal","multiline","ref","placeholder","onChangeText","caption","type","aspectRatio","backgroundColor","source","uri","downloadURL","cacheKey","downloadURLStill","numColumns","horizontal","data","keyExtractor","index","renderItem","_ref","profileImageSmall","padding15","activeOpacity","onPress","navigate","image","bold","numberOfLines","ellipsizeMode","margin15Right","margin5Bottom","paddingBottom","grey","small","toDate","buttonOutlined","marginLeft","textAlign","textAlignVertical","mapStateToProps","store","userState","usersState","mapDispatchProps","dispatch"],"sources":["C:/Users/alexd/Documents/InstagramClone/frontend/components/main/chat/List.js"],"sourcesContent":["import { FontAwesome5 } from '@expo/vector-icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FlatList, Image, Text, TouchableOpacity, View, TextInput } from 'react-native';\r\nimport { Divider } from 'react-native-paper';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchUsersData } from '../../../redux/actions/index';\r\nimport { container, text, utils } from '../../styles';\r\nimport { timeDifference } from '../../utils';\r\nimport CachedImage from '../random/CachedImage';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore, collection, doc, updateDoc, addDoc } from 'firebase/firestore';\r\n\r\nconst auth = getAuth();\r\nconst db = getFirestore();\r\n\r\nfunction Chat(props) {\r\n    const [chats, setChats] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [textInput, setTextInput] = useState(null);\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < props.chats.length; i++) {\r\n            if (props.chats[i].hasOwnProperty('otherUser')) continue;\r\n\r\n            let otherUserId;\r\n            if (props.chats[i].users[0] === auth.currentUser.uid) {\r\n                otherUserId = props.chats[i].users[1];\r\n            } else {\r\n                otherUserId = props.chats[i].users[0];\r\n            }\r\n\r\n            const user = props.users.find((x) => x.uid === otherUserId);\r\n            if (!user) {\r\n                props.fetchUsersData(otherUserId, false);\r\n            } else {\r\n                props.chats[i].otherUser = user;\r\n            }\r\n        }\r\n        setChats(props.chats);\r\n    }, [props.chats, props.users]);\r\n\r\n    const sendPost = async (item) => {\r\n        if (item.sent) return;\r\n\r\n        const textToSend = input;\r\n        setInput(\"\");\r\n        textInput.clear();\r\n\r\n        const post = { ...props.route.params.post };\r\n        delete post.doc;\r\n\r\n        const chatMessagesRef = collection(db, 'chats', item.id, 'messages');\r\n        const chatRef = doc(db, 'chats', item.id);\r\n\r\n        await addDoc(chatMessagesRef, {\r\n            creator: auth.currentUser.uid,\r\n            text: textToSend,\r\n            post,\r\n            creation: new Date(),\r\n        });\r\n\r\n        await updateDoc(chatRef, {\r\n            lastMessage: \"post sent\",\r\n            lastMessageTimestamp: new Date(),\r\n        });\r\n\r\n        props.navigation.popToTop();\r\n    };\r\n\r\n    let share = false;\r\n    let item = null;\r\n\r\n    if (props.route.params) {\r\n        share = props.route.params.share;\r\n        item = props.route.params.post;\r\n    }\r\n\r\n    if (!chats.length) {\r\n        return (\r\n            <View style={{ height: '100%', justifyContent: 'center', margin: 'auto' }}>\r\n                <FontAwesome5 style={{ alignSelf: 'center', marginBottom: 20 }} name=\"comments\" size={40} color=\"black\" />\r\n                <Text style={[text.notAvailable]}>No chats available</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\r\n            {item && (\r\n                <View style={{ flexDirection: 'row', padding: 20 }}>\r\n                    <TextInput\r\n                        style={[container.fillHorizontal, container.input, container.container]}\r\n                        multiline\r\n                        ref={setTextInput}\r\n                        placeholder=\"Write a message . . .\"\r\n                        onChangeText={(caption) => setInput(caption)}\r\n                    />\r\n                    {item.type === 1 ? (\r\n                        <Image\r\n                            style={{ aspectRatio: 1, backgroundColor: 'black', height: 80 }}\r\n                            source={{ uri: props.route.params.post.downloadURL }}\r\n                        />\r\n                    ) : (\r\n                        <CachedImage\r\n                            cacheKey={item.id}\r\n                            style={{ aspectRatio: 1, height: 80 }}\r\n                            source={{ uri: props.route.params.post.downloadURLStill }}\r\n                        />\r\n                    )}\r\n                </View>\r\n            )}\r\n\r\n            <Divider />\r\n            <FlatList\r\n                numColumns={1}\r\n                horizontal={false}\r\n                data={chats}\r\n                keyExtractor={(item, index) => item.id}\r\n                renderItem={({ item }) => (\r\n                    <View style={!item[auth.currentUser.uid] ? { backgroundColor: '#d2eeff' } : null}>\r\n                        {!item.otherUser ? (\r\n                            <FontAwesome5 style={[utils.profileImageSmall]} name=\"user-circle\" size={35} color=\"black\" />\r\n                        ) : (\r\n                            <TouchableOpacity\r\n                                style={[utils.padding15, container.horizontal]}\r\n                                activeOpacity={share ? 1 : 0}\r\n                                onPress={() => {\r\n                                    if (!share) {\r\n                                        props.navigation.navigate(\"Chat\", { user: item.otherUser });\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <View style={container.horizontal}>\r\n                                    {item.otherUser.image === 'default' ? (\r\n                                        <FontAwesome5 style={[utils.profileImageSmall]} name=\"user-circle\" size={35} color=\"black\" />\r\n                                    ) : (\r\n                                        <Image\r\n                                            style={[utils.profileImageSmall]}\r\n                                            source={{ uri: item.otherUser.image }}\r\n                                        />\r\n                                    )}\r\n                                </View>\r\n\r\n                                <View>\r\n                                    <Text style={[text.bold]}>{item.otherUser.name}</Text>\r\n                                    <Text\r\n                                        numberOfLines={1}\r\n                                        ellipsizeMode=\"tail\"\r\n                                        style={[utils.margin15Right, utils.margin5Bottom, { paddingBottom: 10 }]}\r\n                                    >\r\n                                        {item.lastMessage}{\" \"}\r\n                                        {item.lastMessageTimestamp ? (\r\n                                            <Text\r\n                                                style={[text.grey, text.small, utils.margin5Bottom]}\r\n                                            >\r\n                                                {timeDifference(new Date(), item.lastMessageTimestamp.toDate())}\r\n                                            </Text>\r\n                                        ) : (\r\n                                            <Text style={[text.grey, text.small, utils.margin5Bottom]}>\r\n                                                Now\r\n                                            </Text>\r\n                                        )}\r\n                                    </Text>\r\n                                </View>\r\n\r\n                                {share && (\r\n                                    <TouchableOpacity\r\n                                        style={[\r\n                                            utils.buttonOutlined,\r\n                                            utils.margin15Right,\r\n                                            { backgroundColor: '#0095ff', marginLeft: 'auto', justifyContent: 'center' },\r\n                                        ]}\r\n                                        onPress={() => sendPost(item)}\r\n                                    >\r\n                                        <Text\r\n                                            style={[\r\n                                                text.bold,\r\n                                                { color: 'white', textAlign: 'center', textAlignVertical: 'center' },\r\n                                            ]}\r\n                                        >\r\n                                            Send\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                )}\r\n                            </TouchableOpacity>\r\n                        )}\r\n                    </View>\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n    chats: store.userState.chats,\r\n    users: store.usersState.users,\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) =>\r\n    bindActionCreators({ fetchUsersData }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}