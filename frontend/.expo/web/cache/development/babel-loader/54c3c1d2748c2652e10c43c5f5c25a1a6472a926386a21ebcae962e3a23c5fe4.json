{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default {\n  get name() {\n    return 'ExpoVideoThumbnails';\n  },\n  getThumbnailAsync: function getThumbnailAsync(sourceFilename) {\n    var _arguments = arguments;\n    return function _callee() {\n      var options;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n            throw new Error('ExpoVideoThumbnails not supported on Expo Web');\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};","map":{"version":3,"names":["name","getThumbnailAsync","sourceFilename","_arguments","arguments","_callee","options","_regeneratorRuntime","async","_callee$","_context","prev","next","length","undefined","Error","stop","Promise"],"sources":["C:\\Users\\alexd\\Documents\\InstagramClone\\frontend\\node_modules\\expo-video-thumbnails\\src\\ExpoVideoThumbnails.web.ts"],"sourcesContent":["import { VideoThumbnailsOptions, VideoThumbnailsResult } from './VideoThumbnailsTypes.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoThumbnails';\n  },\n  async getThumbnailAsync(\n    sourceFilename: string,\n    options: VideoThumbnailsOptions = {}\n  ): Promise<VideoThumbnailsResult> {\n    throw new Error('ExpoVideoThumbnails not supported on Expo Web');\n  },\n};\n"],"mappings":";AAEA,eAAe;EACb,IAAIA,IAAIA,CAAA;IACN,OAAO,qBAAqB;EAC9B,CAAC;EACKC,iBAAiB,WAAjBA,iBAAiBA,CACrBC,cAAsB,EACc;IAAA,IAAAC,UAAA,GAAAC,SAAA;IAAA,gBAAAC,QAAA;MAAA,IAAAC,OAAA;MAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAApCN,OAAA,GAAAH,UAAA,CAAAU,MAAA,QAAAV,UAAA,QAAAW,SAAA,GAAAX,UAAA,MAAkC,EAAE;YAAA,MAE9B,IAAIY,KAAK,CAAC,+CAA+C,CAAC;UAAA;UAAA;YAAA,OAAAL,QAAA,CAAAM,IAAA;QAAA;MAAA,qBAAAC,OAAA;IAAA;EAClE;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}