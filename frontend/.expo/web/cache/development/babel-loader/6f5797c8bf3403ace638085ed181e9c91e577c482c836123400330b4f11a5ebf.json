{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData, sendNotification } from \"../../../redux/actions/index\";\nimport { container, text, utils } from \"../../styles\";\nimport { timeDifference } from \"../../utils\";\nimport { getFirestore, collection, doc, query, orderBy, getDocs, addDoc, serverTimestamp, getDoc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nvar db = getFirestore();\nvar auth = getAuth();\nfunction Comment(props) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    comments = _useState2[0],\n    setComments = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    postId = _useState4[0],\n    setPostId = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    input = _useState6[0],\n    setInput = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    refresh = _useState8[0],\n    setRefresh = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    textInput = _useState10[0],\n    setTextInput = _useState10[1];\n  useEffect(function () {\n    getComments();\n  }, [props.route.params.postId, props.users, refresh]);\n  var matchUserToComment = function matchUserToComment(comments) {\n    var _loop = function _loop(i) {\n      if (comments[i].hasOwnProperty('user')) return 1;\n      var user = props.users.find(function (x) {\n        return x.uid === comments[i].creator;\n      });\n      if (!user) {\n        props.fetchUsersData(comments[i].creator, false);\n      } else {\n        comments[i].user = user;\n      }\n    };\n    for (var i = 0; i < comments.length; i++) {\n      if (_loop(i)) continue;\n    }\n    setComments(comments);\n    setRefresh(false);\n  };\n  var getComments = function getComments() {\n    var commentsQuery, snapshot, _comments;\n    return _regeneratorRuntime.async(function getComments$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(props.route.params.postId !== postId || refresh)) {\n            _context.next = 10;\n            break;\n          }\n          commentsQuery = query(collection(db, 'posts', props.route.params.uid, 'userPosts', props.route.params.postId, 'comments'), orderBy('creation', 'desc'));\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getDocs(commentsQuery));\n        case 4:\n          snapshot = _context.sent;\n          _comments = snapshot.docs.map(function (doc) {\n            return _objectSpread({\n              id: doc.id\n            }, doc.data());\n          });\n          matchUserToComment(_comments);\n          setPostId(props.route.params.postId);\n          _context.next = 11;\n          break;\n        case 10:\n          matchUserToComment(comments);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  var onCommentSend = function onCommentSend() {\n    var textToSend, commentsRef, userDocRef, userSnapshot, userData;\n    return _regeneratorRuntime.async(function onCommentSend$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          textToSend = input;\n          if (!(input.trim().length === 0)) {\n            _context2.next = 3;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 3:\n          setInput(\"\");\n          textInput.clear();\n          commentsRef = collection(db, 'posts', props.route.params.uid, 'userPosts', props.route.params.postId, 'comments');\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(addDoc(commentsRef, {\n            creator: auth.currentUser.uid,\n            text: textToSend,\n            creation: serverTimestamp()\n          }));\n        case 8:\n          setRefresh(true);\n          userDocRef = doc(db, 'users', props.route.params.uid);\n          _context2.next = 12;\n          return _regeneratorRuntime.awrap(getDoc(userDocRef));\n        case 12:\n          userSnapshot = _context2.sent;\n          if (userSnapshot.exists()) {\n            userData = userSnapshot.data();\n            props.sendNotification(userData.notificationToken, \"New Comment\", props.currentUser.name + \" commented on your post\", {\n              type: 0,\n              user: auth.currentUser.uid\n            });\n          }\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  return React.createElement(View, {\n    style: [container.container, container.alignItemsCenter, utils.backgroundWhite]\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: utils.padding10\n      }, item.user ? React.createElement(View, {\n        style: container.horizontal\n      }, item.user.image === 'default' ? React.createElement(FontAwesome5, {\n        style: [utils.profileImageSmall],\n        name: \"user-circle\",\n        size: 35,\n        color: \"black\",\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.user.uid,\n            username: undefined\n          });\n        }\n      }) : React.createElement(Image, {\n        style: [utils.profileImageSmall],\n        source: {\n          uri: item.user.image\n        },\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.user.uid,\n            username: undefined\n          });\n        }\n      }), React.createElement(View, {\n        style: {\n          marginRight: 30\n        }\n      }, React.createElement(Text, {\n        style: [utils.margin15Right, utils.margin5Bottom, {\n          flexWrap: 'wrap'\n        }]\n      }, React.createElement(Text, {\n        style: [text.bold],\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.user.uid,\n            username: undefined\n          });\n        }\n      }, item.user.name), \" \", item.text), React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom]\n      }, timeDifference(new Date(), item.creation.toDate())))) : null);\n    }\n  }), React.createElement(View, {\n    style: [utils.borderTopGray]\n  }, React.createElement(View, {\n    style: [container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite]\n  }, props.currentUser.image === 'default' ? React.createElement(FontAwesome5, {\n    style: [utils.profileImageSmall],\n    name: \"user-circle\",\n    size: 35,\n    color: \"black\"\n  }) : React.createElement(Image, {\n    style: [utils.profileImageSmall],\n    source: {\n      uri: props.currentUser.image\n    }\n  }), React.createElement(View, {\n    style: [container.horizontal, utils.justifyCenter, utils.alignItemsCenter]\n  }, React.createElement(TextInput, {\n    ref: function ref(input) {\n      return setTextInput(input);\n    },\n    value: input,\n    multiline: true,\n    style: [container.fillHorizontal, container.input, container.container],\n    placeholder: \"comment...\",\n    onChangeText: function onChangeText(text) {\n      return setInput(text);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: onCommentSend,\n    style: {\n      width: 100,\n      alignSelf: 'center'\n    }\n  }, React.createElement(Text, {\n    style: [text.bold, text.medium, text.deepskyblue]\n  }, \"Post\"))))));\n}\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users,\n    currentUser: store.userState.currentUser\n  };\n};\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData,\n    sendNotification: sendNotification\n  }, dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchProps)(Comment);","map":{"version":3,"names":["FontAwesome5","React","useEffect","useState","FlatList","Image","Text","TextInput","TouchableOpacity","View","connect","bindActionCreators","fetchUsersData","sendNotification","container","text","utils","timeDifference","getFirestore","collection","doc","query","orderBy","getDocs","addDoc","serverTimestamp","getDoc","getAuth","db","auth","Comment","props","_useState","_useState2","_slicedToArray","comments","setComments","_useState3","_useState4","postId","setPostId","_useState5","_useState6","input","setInput","_useState7","_useState8","refresh","setRefresh","_useState9","_useState10","textInput","setTextInput","getComments","route","params","users","matchUserToComment","_loop","i","hasOwnProperty","user","find","x","uid","creator","length","commentsQuery","snapshot","_comments","_regeneratorRuntime","async","getComments$","_context","prev","next","awrap","sent","docs","map","_objectSpread","id","data","stop","Promise","onCommentSend","textToSend","commentsRef","userDocRef","userSnapshot","userData","onCommentSend$","_context2","trim","abrupt","clear","currentUser","creation","exists","notificationToken","name","type","createElement","style","alignItemsCenter","backgroundWhite","numColumns","horizontal","renderItem","_ref","item","padding10","image","profileImageSmall","size","color","onPress","navigation","navigate","username","undefined","source","uri","marginRight","margin15Right","margin5Bottom","flexWrap","bold","grey","small","Date","toDate","borderTopGray","justifyCenter","ref","value","multiline","fillHorizontal","placeholder","onChangeText","width","alignSelf","medium","deepskyblue","mapStateToProps","store","usersState","userState","mapDispatchProps","dispatch"],"sources":["C:/Users/alexd/Documents/InstagramClone/frontend/components/main/post/Comment.js"],"sourcesContent":["import { FontAwesome5 } from '@expo/vector-icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FlatList, Image, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchUsersData, sendNotification } from '../../../redux/actions/index';\r\nimport { container, text, utils } from '../../styles';\r\nimport { timeDifference } from '../../utils';\r\nimport { getFirestore, collection, doc, query, orderBy, getDocs, addDoc, serverTimestamp, getDoc } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst db = getFirestore();\r\nconst auth = getAuth();\r\n\r\nfunction Comment(props) {\r\n    const [comments, setComments] = useState([]);\r\n    const [postId, setPostId] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [textInput, setTextInput] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getComments();\r\n    }, [props.route.params.postId, props.users, refresh]);\r\n\r\n    const matchUserToComment = (comments) => {\r\n        for (let i = 0; i < comments.length; i++) {\r\n            if (comments[i].hasOwnProperty('user')) continue;\r\n\r\n            const user = props.users.find((x) => x.uid === comments[i].creator);\r\n            if (!user) {\r\n                props.fetchUsersData(comments[i].creator, false);\r\n            } else {\r\n                comments[i].user = user;\r\n            }\r\n        }\r\n        setComments(comments);\r\n        setRefresh(false);\r\n    };\r\n\r\n    const getComments = async () => {\r\n        if (props.route.params.postId !== postId || refresh) {\r\n            const commentsQuery = query(\r\n                collection(db, 'posts', props.route.params.uid, 'userPosts', props.route.params.postId, 'comments'),\r\n                orderBy('creation', 'desc')\r\n            );\r\n\r\n            const snapshot = await getDocs(commentsQuery);\r\n            const comments = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n\r\n            matchUserToComment(comments);\r\n            setPostId(props.route.params.postId);\r\n        } else {\r\n            matchUserToComment(comments);\r\n        }\r\n    };\r\n\r\n    const onCommentSend = async () => {\r\n        const textToSend = input;\r\n        if (input.trim().length === 0) return;\r\n\r\n        setInput(\"\");\r\n        textInput.clear();\r\n\r\n        const commentsRef = collection(db, 'posts', props.route.params.uid, 'userPosts', props.route.params.postId, 'comments');\r\n        await addDoc(commentsRef, {\r\n            creator: auth.currentUser.uid,\r\n            text: textToSend,\r\n            creation: serverTimestamp(),\r\n        });\r\n\r\n        setRefresh(true);\r\n\r\n        const userDocRef = doc(db, 'users', props.route.params.uid);\r\n        const userSnapshot = await getDoc(userDocRef);\r\n\r\n        if (userSnapshot.exists()) {\r\n            const userData = userSnapshot.data();\r\n            props.sendNotification(\r\n                userData.notificationToken,\r\n                \"New Comment\",\r\n                `${props.currentUser.name} commented on your post`,\r\n                { type: 0, user: auth.currentUser.uid }\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\r\n            <FlatList\r\n                numColumns={1}\r\n                horizontal={false}\r\n                data={comments}\r\n                renderItem={({ item }) => (\r\n                    <View style={utils.padding10}>\r\n                        {item.user ? (\r\n                            <View style={container.horizontal}>\r\n                                {item.user.image === 'default' ? (\r\n                                    <FontAwesome5\r\n                                        style={[utils.profileImageSmall]}\r\n                                        name=\"user-circle\"\r\n                                        size={35}\r\n                                        color=\"black\"\r\n                                        onPress={() =>\r\n                                            props.navigation.navigate(\"Profile\", {\r\n                                                uid: item.user.uid,\r\n                                                username: undefined,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                ) : (\r\n                                    <Image\r\n                                        style={[utils.profileImageSmall]}\r\n                                        source={{ uri: item.user.image }}\r\n                                        onPress={() =>\r\n                                            props.navigation.navigate(\"Profile\", {\r\n                                                uid: item.user.uid,\r\n                                                username: undefined,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                )}\r\n                                <View style={{ marginRight: 30 }}>\r\n                                    <Text style={[utils.margin15Right, utils.margin5Bottom, { flexWrap: 'wrap' }]}>\r\n                                        <Text\r\n                                            style={[text.bold]}\r\n                                            onPress={() =>\r\n                                                props.navigation.navigate(\"Profile\", {\r\n                                                    uid: item.user.uid,\r\n                                                    username: undefined,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            {item.user.name}\r\n                                        </Text>{\" \"}\r\n                                        {item.text}\r\n                                    </Text>\r\n                                    <Text style={[text.grey, text.small, utils.margin5Bottom]}>\r\n                                        {timeDifference(new Date(), item.creation.toDate())}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                        ) : null}\r\n                    </View>\r\n                )}\r\n            />\r\n            <View style={[utils.borderTopGray]}>\r\n                <View style={[container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite]}>\r\n                    {props.currentUser.image === 'default' ? (\r\n                        <FontAwesome5\r\n                            style={[utils.profileImageSmall]}\r\n                            name=\"user-circle\"\r\n                            size={35}\r\n                            color=\"black\"\r\n                        />\r\n                    ) : (\r\n                        <Image\r\n                            style={[utils.profileImageSmall]}\r\n                            source={{ uri: props.currentUser.image }}\r\n                        />\r\n                    )}\r\n                    <View style={[container.horizontal, utils.justifyCenter, utils.alignItemsCenter]}>\r\n                        <TextInput\r\n                            ref={(input) => setTextInput(input)}\r\n                            value={input}\r\n                            multiline\r\n                            style={[container.fillHorizontal, container.input, container.container]}\r\n                            placeholder=\"comment...\"\r\n                            onChangeText={(text) => setInput(text)}\r\n                        />\r\n                        <TouchableOpacity\r\n                            onPress={onCommentSend}\r\n                            style={{ width: 100, alignSelf: 'center' }}\r\n                        >\r\n                            <Text style={[text.bold, text.medium, text.deepskyblue]}>Post</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    users: store.usersState.users,\r\n    currentUser: store.userState.currentUser,\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUsersData, sendNotification }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Comment);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}