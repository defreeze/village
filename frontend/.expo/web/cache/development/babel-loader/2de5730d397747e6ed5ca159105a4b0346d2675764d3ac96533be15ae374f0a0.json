{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var defaultProps = {\n  errorCallback: function errorCallback(error) {\n    return console.error(\"[VideoPlayer] \" + error.type + \" Error - \" + error.message + \": \" + error.obj);\n  },\n  playbackCallback: function playbackCallback() {},\n  defaultControlsVisible: false,\n  timeVisible: true,\n  slider: {\n    visible: true\n  },\n  textStyle: {\n    color: '#FFF',\n    fontSize: 12,\n    textAlign: 'center'\n  },\n  activityIndicator: {\n    size: 'large',\n    color: '#999'\n  },\n  animation: {\n    fadeInDuration: 300,\n    fadeOutDuration: 300\n  },\n  style: {\n    width: Platform.OS === 'web' ? '100%' : Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n    videoBackgroundColor: '#000',\n    controlsBackgroundColor: '#000'\n  },\n  icon: {\n    size: 48,\n    color: '#FFF',\n    style: {\n      padding: 2\n    }\n  },\n  fullscreen: {\n    enterFullscreen: function enterFullscreen() {\n      return (console.log('[VideoPlayer] - missing `enterFullscreen` function in `fullscreen` prop')\n      );\n    },\n    exitFullscreen: function exitFullscreen() {\n      return (console.log('[VideoPlayer] - missing `exitFullscreen` function in `fullscreen` prop')\n      );\n    },\n    inFullscreen: false,\n    visible: true\n  },\n  autoHidePlayer: true,\n  header: undefined,\n  mute: {\n    enterMute: function enterMute() {\n      return (console.log('[VideoPlayer] - missing `enterMute` function in `mute` prop')\n      );\n    },\n    exitMute: function exitMute() {\n      return (console.log('[VideoPlayer] - missing `exitMute` function in `mute` prop')\n      );\n    },\n    isMute: false,\n    visible: false\n  }\n};","map":{"version":3,"names":["defaultProps","errorCallback","error","console","type","message","obj","playbackCallback","defaultControlsVisible","timeVisible","slider","visible","textStyle","color","fontSize","textAlign","activityIndicator","size","animation","fadeInDuration","fadeOutDuration","style","width","Platform","OS","Dimensions","get","height","videoBackgroundColor","controlsBackgroundColor","icon","padding","fullscreen","enterFullscreen","log","exitFullscreen","inFullscreen","autoHidePlayer","header","undefined","mute","enterMute","exitMute","isMute"],"sources":["C:/Users/alexd/Documents/InstagramClone/frontend/node_modules/expo-video-player/dist/props.js"],"sourcesContent":["import { Dimensions, Platform } from 'react-native';\r\nexport const defaultProps = {\r\n    errorCallback: error => console.error(`[VideoPlayer] ${error.type} Error - ${error.message}: ${error.obj}`),\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    playbackCallback: () => { },\r\n    defaultControlsVisible: false,\r\n    timeVisible: true,\r\n    slider: {\r\n        visible: true,\r\n    },\r\n    textStyle: {\r\n        color: '#FFF',\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n    },\r\n    activityIndicator: {\r\n        size: 'large',\r\n        color: '#999',\r\n    },\r\n    animation: {\r\n        fadeInDuration: 300,\r\n        fadeOutDuration: 300,\r\n    },\r\n    style: {\r\n        width: Platform.OS === 'web' ? '100%' : Dimensions.get('window').width,\r\n        height: Dimensions.get('window').height,\r\n        videoBackgroundColor: '#000',\r\n        controlsBackgroundColor: '#000',\r\n    },\r\n    icon: {\r\n        size: 48,\r\n        color: '#FFF',\r\n        style: {\r\n            padding: 2,\r\n        },\r\n    },\r\n    fullscreen: {\r\n        enterFullscreen: () => \r\n        // eslint-disable-next-line no-console\r\n        console.log('[VideoPlayer] - missing `enterFullscreen` function in `fullscreen` prop'),\r\n        exitFullscreen: () => \r\n        // eslint-disable-next-line no-console\r\n        console.log('[VideoPlayer] - missing `exitFullscreen` function in `fullscreen` prop'),\r\n        inFullscreen: false,\r\n        visible: true,\r\n    },\r\n    autoHidePlayer: true,\r\n    header: undefined,\r\n    mute: {\r\n        enterMute: () => \r\n        // eslint-disable-next-line no-console\r\n        console.log('[VideoPlayer] - missing `enterMute` function in `mute` prop'),\r\n        exitMute: () => \r\n        // eslint-disable-next-line no-console\r\n        console.log('[VideoPlayer] - missing `exitMute` function in `mute` prop'),\r\n        isMute: false,\r\n        visible: false,\r\n    },\r\n};\r\n"],"mappings":";;AACA,OAAO,IAAMA,YAAY,GAAG;EACxBC,aAAa,EAAE,SAAfA,aAAaA,CAAEC,KAAK;IAAA,OAAIC,OAAO,CAACD,KAAK,oBAAkBA,KAAK,CAACE,IAAI,iBAAYF,KAAK,CAACG,OAAO,UAAKH,KAAK,CAACI,GAAK,CAAC;EAAA;EAE3GC,gBAAgB,EAAE,SAAlBA,gBAAgBA,CAAA,EAAQ,CAAE,CAAC;EAC3BC,sBAAsB,EAAE,KAAK;EAC7BC,WAAW,EAAE,IAAI;EACjBC,MAAM,EAAE;IACJC,OAAO,EAAE;EACb,CAAC;EACDC,SAAS,EAAE;IACPC,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACf,CAAC;EACDC,iBAAiB,EAAE;IACfC,IAAI,EAAE,OAAO;IACbJ,KAAK,EAAE;EACX,CAAC;EACDK,SAAS,EAAE;IACPC,cAAc,EAAE,GAAG;IACnBC,eAAe,EAAE;EACrB,CAAC;EACDC,KAAK,EAAE;IACHC,KAAK,EAAEC,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,MAAM,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACJ,KAAK;IACtEK,MAAM,EAAEF,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;IACvCC,oBAAoB,EAAE,MAAM;IAC5BC,uBAAuB,EAAE;EAC7B,CAAC;EACDC,IAAI,EAAE;IACFb,IAAI,EAAE,EAAE;IACRJ,KAAK,EAAE,MAAM;IACbQ,KAAK,EAAE;MACHU,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,UAAU,EAAE;IACRC,eAAe,EAAE,SAAjBA,eAAeA,CAAA;MAAA,QAEf9B,OAAO,CAAC+B,GAAG,CAAC,yEAAyE;MAAC;IAAA;IACtFC,cAAc,EAAE,SAAhBA,cAAcA,CAAA;MAAA,QAEdhC,OAAO,CAAC+B,GAAG,CAAC,wEAAwE;MAAC;IAAA;IACrFE,YAAY,EAAE,KAAK;IACnBzB,OAAO,EAAE;EACb,CAAC;EACD0B,cAAc,EAAE,IAAI;EACpBC,MAAM,EAAEC,SAAS;EACjBC,IAAI,EAAE;IACFC,SAAS,EAAE,SAAXA,SAASA,CAAA;MAAA,QAETtC,OAAO,CAAC+B,GAAG,CAAC,6DAA6D;MAAC;IAAA;IAC1EQ,QAAQ,EAAE,SAAVA,QAAQA,CAAA;MAAA,QAERvC,OAAO,CAAC+B,GAAG,CAAC,4DAA4D;MAAC;IAAA;IACzES,MAAM,EAAE,KAAK;IACbhC,OAAO,EAAE;EACb;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}