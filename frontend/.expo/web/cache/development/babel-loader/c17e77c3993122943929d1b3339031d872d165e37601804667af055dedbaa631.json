{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CachedImage from 'react-native-expo-cached-image';\nimport { Provider } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchFeedPosts, fetchUserChats, sendNotification } from \"../../../redux/actions/index\";\nimport { container, text, utils } from \"../../styles\";\nimport { timeDifference } from \"../../utils\";\nimport { getFirestore, collection, doc, query, where, getDoc, getDocs, addDoc, updateDoc, onSnapshot, orderBy } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nvar auth = getAuth();\nvar db = getFirestore();\nfunction Chat(props) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chat = _useState4[0],\n    setChat = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messages = _useState6[0],\n    setMessages = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    input = _useState8[0],\n    setInput = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    textInput = _useState10[0],\n    setTextInput = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    flatList = _useState12[0],\n    setFlatList = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    initialFetch = _useState14[0],\n    setInitialFetch = _useState14[1];\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userDocRef, snapshot, userData;\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!props.route.params.notification) {\n              _context.next = 8;\n              break;\n            }\n            userDocRef = doc(db, \"users\", props.route.params.user);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getDoc(userDocRef));\n          case 4:\n            snapshot = _context.sent;\n            if (snapshot.exists()) {\n              userData = snapshot.data();\n              userData.uid = snapshot.id;\n              setUser(userData);\n            }\n            _context.next = 9;\n            break;\n          case 8:\n            setUser(props.route.params.user);\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, null, Promise);\n    };\n    fetchUser();\n  }, [props.route.params.notification, props.route.params.user]);\n  useEffect(function () {\n    if (!user || initialFetch) return;\n    var foundChat = props.chats.find(function (el) {\n      return el.users.includes(user.uid);\n    });\n    setChat(foundChat);\n    props.navigation.setOptions({\n      headerTitle: function headerTitle() {\n        return React.createElement(View, {\n          style: [container.horizontal, utils.alignItemsCenter, {\n            overflow: 'hidden'\n          }]\n        }, user.image === 'default' ? React.createElement(FontAwesome5, {\n          style: [utils.profileImageSmall],\n          name: \"user-circle\",\n          size: 35,\n          color: \"black\"\n        }) : React.createElement(Image, {\n          style: [utils.profileImageSmall],\n          source: {\n            uri: user.image\n          }\n        }), React.createElement(Text, {\n          style: [text.bold, text.large, {\n            flex: 1\n          }],\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\"\n        }, user.username));\n      }\n    });\n    if (foundChat) {\n      var messagesQuery = query(collection(db, \"chats\", foundChat.id, \"messages\"), orderBy(\"creation\", \"asc\"));\n      var unsubscribe = onSnapshot(messagesQuery, function (snapshot) {\n        var fetchedMessages = snapshot.docs.map(function (doc) {\n          return _objectSpread({\n            id: doc.id\n          }, doc.data());\n        });\n        setMessages(fetchedMessages);\n      });\n      var chatDocRef = doc(db, \"chats\", foundChat.id);\n      updateDoc(chatDocRef, _defineProperty({}, auth.currentUser.uid, true));\n      setInitialFetch(true);\n      return function () {\n        return unsubscribe();\n      };\n    } else {\n      createChat();\n    }\n  }, [user, props.chats]);\n  var createChat = function createChat() {\n    var chatDocRef;\n    return _regeneratorRuntime.async(function createChat$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(addDoc(collection(db, \"chats\"), {\n            users: [auth.currentUser.uid, user.uid],\n            lastMessage: \"Send the first message\",\n            lastMessageTimestamp: null\n          }));\n        case 2:\n          chatDocRef = _context2.sent;\n          props.fetchUserChats();\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  var onSend = function onSend() {\n    var textToSend, messagesCollectionRef, chatDocRef;\n    return _regeneratorRuntime.async(function onSend$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(!chat || input.trim() === \"\")) {\n            _context3.next = 2;\n            break;\n          }\n          return _context3.abrupt(\"return\");\n        case 2:\n          textToSend = input;\n          setInput(\"\");\n          textInput == null ? void 0 : textInput.clear();\n          messagesCollectionRef = collection(db, \"chats\", chat.id, \"messages\");\n          _context3.next = 8;\n          return _regeneratorRuntime.awrap(addDoc(messagesCollectionRef, {\n            creator: auth.currentUser.uid,\n            text: textToSend,\n            creation: new Date()\n          }));\n        case 8:\n          chatDocRef = doc(db, \"chats\", chat.id);\n          _context3.next = 11;\n          return _regeneratorRuntime.awrap(updateDoc(chatDocRef, _defineProperty(_defineProperty({\n            lastMessage: textToSend,\n            lastMessageTimestamp: new Date()\n          }, chat.users[0], false), chat.users[1], false)));\n        case 11:\n          props.sendNotification(user.notificationToken, \"New Message\", textToSend, {\n            type: \"chat\",\n            user: auth.currentUser.uid\n          });\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  return React.createElement(View, {\n    style: [container.container, container.alignItemsCenter, utils.backgroundWhite]\n  }, React.createElement(Provider, null, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: messages,\n    ref: setFlatList,\n    onContentSizeChange: function onContentSizeChange() {\n      return flatList == null ? void 0 : flatList.scrollToEnd({\n        animated: true\n      });\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: [utils.padding10, container.container, item.creator === auth.currentUser.uid ? container.chatRight : container.chatLeft]\n      }, item.creator !== undefined && item.creation !== null ? React.createElement(View, {\n        style: container.horizontal\n      }, React.createElement(View, null, React.createElement(Text, {\n        style: [utils.margin5Bottom, text.white]\n      }, item.text), item.post && React.createElement(TouchableOpacity, {\n        style: {\n          marginBottom: 20,\n          marginTop: 10\n        },\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Post\", {\n            item: item.post,\n            user: item.post.user\n          });\n        }\n      }, React.createElement(CachedImage, {\n        cacheKey: item.id,\n        style: {\n          aspectRatio: 1,\n          width: 200\n        },\n        source: {\n          uri: item.post.downloadURL\n        }\n      })), React.createElement(Text, {\n        style: [text.grey, text.small, utils.margin5Bottom, text.whitesmoke]\n      }, timeDifference(new Date(), new Date(item.creation))))) : null);\n    }\n  }), React.createElement(View, {\n    style: [container.horizontal, utils.padding10, utils.alignItemsCenter, utils.backgroundWhite, utils.borderTopGray]\n  }, props.currentUser.image === 'default' ? React.createElement(FontAwesome5, {\n    style: [utils.profileImageSmall],\n    name: \"user-circle\",\n    size: 35,\n    color: \"black\"\n  }) : React.createElement(Image, {\n    style: [utils.profileImageSmall],\n    source: {\n      uri: props.currentUser.image\n    }\n  }), React.createElement(View, {\n    style: [container.horizontal, utils.justifyCenter, utils.alignItemsCenter]\n  }, React.createElement(TextInput, {\n    ref: function ref(input) {\n      return setTextInput(input);\n    },\n    value: input,\n    multiline: true,\n    style: [container.fillHorizontal, container.input, container.container],\n    placeholder: \"message...\",\n    onChangeText: setInput\n  }), React.createElement(TouchableOpacity, {\n    onPress: onSend,\n    style: {\n      width: 100,\n      alignSelf: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: [text.bold, text.medium, text.deepskyblue]\n  }, \"Send\"))))));\n}\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    chats: store.userState.chats,\n    following: store.userState.following,\n    feed: store.usersState.feed\n  };\n};\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUserChats: fetchUserChats,\n    sendNotification: sendNotification,\n    fetchFeedPosts: fetchFeedPosts\n  }, dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);","map":{"version":3,"names":["FontAwesome5","React","useEffect","useState","FlatList","Image","Text","TextInput","TouchableOpacity","View","CachedImage","Provider","connect","bindActionCreators","fetchFeedPosts","fetchUserChats","sendNotification","container","text","utils","timeDifference","getFirestore","collection","doc","query","where","getDoc","getDocs","addDoc","updateDoc","onSnapshot","orderBy","getAuth","auth","db","Chat","props","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","chat","setChat","_useState5","_useState6","messages","setMessages","_useState7","_useState8","input","setInput","_useState9","_useState10","textInput","setTextInput","_useState11","_useState12","flatList","setFlatList","_useState13","_useState14","initialFetch","setInitialFetch","fetchUser","userDocRef","snapshot","userData","_regeneratorRuntime","async","fetchUser$","_context","prev","next","route","params","notification","awrap","sent","exists","data","uid","id","stop","Promise","foundChat","chats","find","el","users","includes","navigation","setOptions","headerTitle","createElement","style","horizontal","alignItemsCenter","overflow","image","profileImageSmall","name","size","color","source","uri","bold","large","flex","numberOfLines","ellipsizeMode","username","messagesQuery","unsubscribe","fetchedMessages","docs","map","_objectSpread","chatDocRef","_defineProperty","currentUser","createChat","createChat$","_context2","lastMessage","lastMessageTimestamp","onSend","textToSend","messagesCollectionRef","onSend$","_context3","trim","abrupt","clear","creator","creation","Date","notificationToken","type","backgroundWhite","numColumns","ref","onContentSizeChange","scrollToEnd","animated","renderItem","_ref","item","padding10","chatRight","chatLeft","undefined","margin5Bottom","white","post","marginBottom","marginTop","onPress","navigate","cacheKey","aspectRatio","width","downloadURL","grey","small","whitesmoke","borderTopGray","justifyCenter","value","multiline","fillHorizontal","placeholder","onChangeText","alignSelf","medium","deepskyblue","mapStateToProps","store","userState","following","feed","usersState","mapDispatchProps","dispatch"],"sources":["C:/Users/alexd/Documents/InstagramClone/frontend/components/main/chat/Chat.js"],"sourcesContent":["import { FontAwesome5 } from '@expo/vector-icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FlatList, Image, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport CachedImage from 'react-native-expo-cached-image';\r\nimport { Provider } from 'react-native-paper';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchFeedPosts, fetchUserChats, sendNotification } from '../../../redux/actions/index';\r\nimport { container, text, utils } from '../../styles';\r\nimport { timeDifference } from '../../utils';\r\nimport { getFirestore, collection, doc, query, where, getDoc, getDocs, addDoc, updateDoc, onSnapshot, orderBy } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst auth = getAuth();\r\nconst db = getFirestore();\r\n\r\nfunction Chat(props) {\r\n    const [user, setUser] = useState(null);\r\n    const [chat, setChat] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [textInput, setTextInput] = useState(null);\r\n    const [flatList, setFlatList] = useState(null);\r\n    const [initialFetch, setInitialFetch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            if (props.route.params.notification) {\r\n                const userDocRef = doc(db, \"users\", props.route.params.user);\r\n                const snapshot = await getDoc(userDocRef);\r\n                if (snapshot.exists()) {\r\n                    const userData = snapshot.data();\r\n                    userData.uid = snapshot.id;\r\n                    setUser(userData);\r\n                }\r\n            } else {\r\n                setUser(props.route.params.user);\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n    }, [props.route.params.notification, props.route.params.user]);\r\n\r\n    useEffect(() => {\r\n        if (!user || initialFetch) return;\r\n\r\n        const foundChat = props.chats.find((el) => el.users.includes(user.uid));\r\n        setChat(foundChat);\r\n\r\n        props.navigation.setOptions({\r\n            headerTitle: () => (\r\n                <View style={[container.horizontal, utils.alignItemsCenter, { overflow: 'hidden' }]}>\r\n                    {user.image === 'default' ? (\r\n                        <FontAwesome5\r\n                            style={[utils.profileImageSmall]}\r\n                            name=\"user-circle\"\r\n                            size={35}\r\n                            color=\"black\"\r\n                        />\r\n                    ) : (\r\n                        <Image\r\n                            style={[utils.profileImageSmall]}\r\n                            source={{ uri: user.image }}\r\n                        />\r\n                    )}\r\n                    <Text\r\n                        style={[text.bold, text.large, { flex: 1 }]}\r\n                        numberOfLines={1}\r\n                        ellipsizeMode=\"tail\"\r\n                    >\r\n                        {user.username}\r\n                    </Text>\r\n                </View>\r\n            ),\r\n        });\r\n\r\n        if (foundChat) {\r\n            const messagesQuery = query(\r\n                collection(db, \"chats\", foundChat.id, \"messages\"),\r\n                orderBy(\"creation\", \"asc\")\r\n            );\r\n\r\n            const unsubscribe = onSnapshot(messagesQuery, (snapshot) => {\r\n                const fetchedMessages = snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }));\r\n                setMessages(fetchedMessages);\r\n            });\r\n\r\n            const chatDocRef = doc(db, \"chats\", foundChat.id);\r\n            updateDoc(chatDocRef, {\r\n                [auth.currentUser.uid]: true,\r\n            });\r\n\r\n            setInitialFetch(true);\r\n\r\n            return () => unsubscribe();\r\n        } else {\r\n            createChat();\r\n        }\r\n    }, [user, props.chats]);\r\n\r\n    const createChat = async () => {\r\n        const chatDocRef = await addDoc(collection(db, \"chats\"), {\r\n            users: [auth.currentUser.uid, user.uid],\r\n            lastMessage: \"Send the first message\",\r\n            lastMessageTimestamp: null,\r\n        });\r\n        props.fetchUserChats();\r\n    };\r\n\r\n    const onSend = async () => {\r\n        if (!chat || input.trim() === \"\") return;\r\n\r\n        const textToSend = input;\r\n        setInput(\"\");\r\n        textInput?.clear();\r\n\r\n        const messagesCollectionRef = collection(db, \"chats\", chat.id, \"messages\");\r\n        await addDoc(messagesCollectionRef, {\r\n            creator: auth.currentUser.uid,\r\n            text: textToSend,\r\n            creation: new Date(),\r\n        });\r\n\r\n        const chatDocRef = doc(db, \"chats\", chat.id);\r\n        await updateDoc(chatDocRef, {\r\n            lastMessage: textToSend,\r\n            lastMessageTimestamp: new Date(),\r\n            [chat.users[0]]: false,\r\n            [chat.users[1]]: false,\r\n        });\r\n\r\n        props.sendNotification(\r\n            user.notificationToken,\r\n            \"New Message\",\r\n            textToSend,\r\n            { type: \"chat\", user: auth.currentUser.uid }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View style={[container.container, container.alignItemsCenter, utils.backgroundWhite]}>\r\n            <Provider>\r\n                <FlatList\r\n                    numColumns={1}\r\n                    horizontal={false}\r\n                    data={messages}\r\n                    ref={setFlatList}\r\n                    onContentSizeChange={() => flatList?.scrollToEnd({ animated: true })}\r\n                    renderItem={({ item }) => (\r\n                        <View\r\n                            style={[\r\n                                utils.padding10,\r\n                                container.container,\r\n                                item.creator === auth.currentUser.uid\r\n                                    ? container.chatRight\r\n                                    : container.chatLeft,\r\n                            ]}\r\n                        >\r\n                            {item.creator !== undefined && item.creation !== null ? (\r\n                                <View style={container.horizontal}>\r\n                                    <View>\r\n                                        <Text style={[utils.margin5Bottom, text.white]}>\r\n                                            {item.text}\r\n                                        </Text>\r\n                                        {item.post && (\r\n                                            <TouchableOpacity\r\n                                                style={{ marginBottom: 20, marginTop: 10 }}\r\n                                                onPress={() =>\r\n                                                    props.navigation.navigate(\"Post\", {\r\n                                                        item: item.post,\r\n                                                        user: item.post.user,\r\n                                                    })\r\n                                                }\r\n                                            >\r\n                                                <CachedImage\r\n                                                    cacheKey={item.id}\r\n                                                    style={{ aspectRatio: 1, width: 200 }}\r\n                                                    source={{ uri: item.post.downloadURL }}\r\n                                                />\r\n                                            </TouchableOpacity>\r\n                                        )}\r\n                                        <Text\r\n                                            style={[\r\n                                                text.grey,\r\n                                                text.small,\r\n                                                utils.margin5Bottom,\r\n                                                text.whitesmoke,\r\n                                            ]}\r\n                                        >\r\n                                            {timeDifference(new Date(), new Date(item.creation))}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>\r\n                            ) : null}\r\n                        </View>\r\n                    )}\r\n                />\r\n                <View\r\n                    style={[\r\n                        container.horizontal,\r\n                        utils.padding10,\r\n                        utils.alignItemsCenter,\r\n                        utils.backgroundWhite,\r\n                        utils.borderTopGray,\r\n                    ]}\r\n                >\r\n                    {props.currentUser.image === 'default' ? (\r\n                        <FontAwesome5\r\n                            style={[utils.profileImageSmall]}\r\n                            name=\"user-circle\"\r\n                            size={35}\r\n                            color=\"black\"\r\n                        />\r\n                    ) : (\r\n                        <Image\r\n                            style={[utils.profileImageSmall]}\r\n                            source={{ uri: props.currentUser.image }}\r\n                        />\r\n                    )}\r\n                    <View style={[container.horizontal, utils.justifyCenter, utils.alignItemsCenter]}>\r\n                        <TextInput\r\n                            ref={(input) => setTextInput(input)}\r\n                            value={input}\r\n                            multiline={true}\r\n                            style={[container.fillHorizontal, container.input, container.container]}\r\n                            placeholder=\"message...\"\r\n                            onChangeText={setInput}\r\n                        />\r\n                        <TouchableOpacity\r\n                            onPress={onSend}\r\n                            style={{ width: 100, alignSelf: \"center\" }}\r\n                        >\r\n                            <Text style={[text.bold, text.medium, text.deepskyblue]}>Send</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Provider>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n    chats: store.userState.chats,\r\n    following: store.userState.following,\r\n    feed: store.usersState.feed,\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) =>\r\n    bindActionCreators({ fetchUserChats, sendNotification, fetchFeedPosts }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Chat);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}