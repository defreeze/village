{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { SyntheticPlatformEmitter } from '@unimodules/core';\nimport { PermissionStatus } from 'expo-modules-core';\nfunction getStatusFromMedia(media) {\n  if (!media) {\n    return {\n      isLoaded: false,\n      error: undefined\n    };\n  }\n  var isPlaying = !!(media.currentTime > 0 && !media.paused && !media.ended && media.readyState > 2);\n  var status = {\n    isLoaded: true,\n    uri: media.src,\n    progressUpdateIntervalMillis: 100,\n    durationMillis: media.duration * 1000,\n    positionMillis: media.currentTime * 1000,\n    shouldPlay: media.autoplay,\n    isPlaying: isPlaying,\n    isBuffering: false,\n    rate: media.playbackRate,\n    shouldCorrectPitch: false,\n    volume: media.volume,\n    isMuted: media.muted,\n    isLooping: media.loop,\n    didJustFinish: media.ended\n  };\n  return status;\n}\nfunction setStatusForMedia(media, status) {\n  if (status.positionMillis !== undefined) {\n    media.currentTime = status.positionMillis / 1000;\n  }\n  if (status.shouldPlay !== undefined) {\n    if (status.shouldPlay) {\n      media.play();\n    } else {\n      media.pause();\n    }\n  }\n  if (status.rate !== undefined) {\n    media.playbackRate = status.rate;\n  }\n  if (status.volume !== undefined) {\n    media.volume = status.volume;\n  }\n  if (status.isMuted !== undefined) {\n    media.muted = status.isMuted;\n  }\n  if (status.isLooping !== undefined) {\n    media.loop = status.isLooping;\n  }\n  return getStatusFromMedia(media);\n}\nexport default {\n  get name() {\n    return 'ExponentAV';\n  },\n  getStatusForVideo: function getStatusForVideo(element) {\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  loadForVideo: function loadForVideo(element, nativeSource, fullInitialStatus) {\n    return function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  unloadForVideo: function unloadForVideo(element) {\n    return function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setStatusForVideo: function setStatusForVideo(element, status) {\n    return function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  replayVideo: function replayVideo(element, status) {\n    return function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setAudioMode: function setAudioMode() {\n    return function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setAudioIsEnabled: function setAudioIsEnabled() {\n    return function _callee7() {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getStatusForSound: function getStatusForSound(element) {\n    return function _callee8() {\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", getStatusFromMedia(element));\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  loadForSound: function loadForSound(nativeSource, fullInitialStatus) {\n    return function _callee9() {\n      var source, media, status;\n      return _regeneratorRuntime.async(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            source = typeof nativeSource === 'string' ? nativeSource : nativeSource.uri;\n            media = new Audio(source);\n            media.ontimeupdate = function () {\n              SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus', {\n                key: media,\n                status: getStatusFromMedia(media)\n              });\n            };\n            media.onerror = function () {\n              SyntheticPlatformEmitter.emit('ExponentAV.onError', {\n                key: media,\n                error: media.error.message\n              });\n            };\n            status = setStatusForMedia(media, fullInitialStatus);\n            return _context9.abrupt(\"return\", [media, status]);\n          case 6:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  unloadForSound: function unloadForSound(element) {\n    return function _callee10() {\n      return _regeneratorRuntime.async(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            element.pause();\n            element.removeAttribute('src');\n            element.load();\n            return _context10.abrupt(\"return\", getStatusFromMedia(element));\n          case 4:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  setStatusForSound: function setStatusForSound(element, status) {\n    return function _callee11() {\n      return _regeneratorRuntime.async(function _callee11$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            return _context11.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  replaySound: function replaySound(element, status) {\n    return function _callee12() {\n      return _regeneratorRuntime.async(function _callee12$(_context12) {\n        while (1) switch (_context12.prev = _context12.next) {\n          case 0:\n            return _context12.abrupt(\"return\", setStatusForMedia(element, status));\n          case 1:\n          case \"end\":\n            return _context12.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getAudioRecordingStatus: function getAudioRecordingStatus() {\n    return function _callee13() {\n      return _regeneratorRuntime.async(function _callee13$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  prepareAudioRecorder: function prepareAudioRecorder() {\n    return function _callee14() {\n      return _regeneratorRuntime.async(function _callee14$(_context14) {\n        while (1) switch (_context14.prev = _context14.next) {\n          case 0:\n          case \"end\":\n            return _context14.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  startAudioRecording: function startAudioRecording() {\n    return function _callee15() {\n      return _regeneratorRuntime.async(function _callee15$(_context15) {\n        while (1) switch (_context15.prev = _context15.next) {\n          case 0:\n          case \"end\":\n            return _context15.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  pauseAudioRecording: function pauseAudioRecording() {\n    return function _callee16() {\n      return _regeneratorRuntime.async(function _callee16$(_context16) {\n        while (1) switch (_context16.prev = _context16.next) {\n          case 0:\n          case \"end\":\n            return _context16.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  stopAudioRecording: function stopAudioRecording() {\n    return function _callee17() {\n      return _regeneratorRuntime.async(function _callee17$(_context17) {\n        while (1) switch (_context17.prev = _context17.next) {\n          case 0:\n          case \"end\":\n            return _context17.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  unloadAudioRecorder: function unloadAudioRecorder() {\n    return function _callee18() {\n      return _regeneratorRuntime.async(function _callee18$(_context18) {\n        while (1) switch (_context18.prev = _context18.next) {\n          case 0:\n          case \"end\":\n            return _context18.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getPermissionsAsync: function getPermissionsAsync() {\n    return function _callee19() {\n      return _regeneratorRuntime.async(function _callee19$(_context19) {\n        while (1) switch (_context19.prev = _context19.next) {\n          case 0:\n            return _context19.abrupt(\"return\", {\n              status: PermissionStatus.DENIED,\n              expires: 'never',\n              canAskAgain: false,\n              granted: false\n            });\n          case 1:\n          case \"end\":\n            return _context19.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  requestPermissionsAsync: function requestPermissionsAsync() {\n    var _this = this;\n    return function _callee20() {\n      return _regeneratorRuntime.async(function _callee20$(_context20) {\n        while (1) switch (_context20.prev = _context20.next) {\n          case 0:\n            return _context20.abrupt(\"return\", _this.getPermissionsAsync());\n          case 1:\n          case \"end\":\n            return _context20.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};","map":{"version":3,"names":["SyntheticPlatformEmitter","PermissionStatus","getStatusFromMedia","media","isLoaded","error","undefined","isPlaying","currentTime","paused","ended","readyState","status","uri","src","progressUpdateIntervalMillis","durationMillis","duration","positionMillis","shouldPlay","autoplay","isBuffering","rate","playbackRate","shouldCorrectPitch","volume","isMuted","muted","isLooping","loop","didJustFinish","setStatusForMedia","play","pause","name","getStatusForVideo","element","_callee","_regeneratorRuntime","async","_callee$","_context","prev","next","abrupt","stop","Promise","loadForVideo","nativeSource","fullInitialStatus","_callee2","_callee2$","_context2","unloadForVideo","_callee3","_callee3$","_context3","setStatusForVideo","_callee4","_callee4$","_context4","replayVideo","_callee5","_callee5$","_context5","setAudioMode","_callee6","_callee6$","_context6","setAudioIsEnabled","_callee7","_callee7$","_context7","getStatusForSound","_callee8","_callee8$","_context8","loadForSound","_callee9","source","_callee9$","_context9","Audio","ontimeupdate","emit","key","onerror","message","unloadForSound","_callee10","_callee10$","_context10","removeAttribute","load","setStatusForSound","_callee11","_callee11$","_context11","replaySound","_callee12","_callee12$","_context12","getAudioRecordingStatus","_callee13","_callee13$","_context13","prepareAudioRecorder","_callee14","_callee14$","_context14","startAudioRecording","_callee15","_callee15$","_context15","pauseAudioRecording","_callee16","_callee16$","_context16","stopAudioRecording","_callee17","_callee17$","_context17","unloadAudioRecorder","_callee18","_callee18$","_context18","getPermissionsAsync","_callee19","_callee19$","_context19","DENIED","expires","canAskAgain","granted","requestPermissionsAsync","_this","_callee20","_callee20$","_context20"],"sources":["C:\\Users\\alexd\\Documents\\InstagramClone\\frontend\\node_modules\\expo-av\\src\\ExponentAV.web.ts"],"sourcesContent":["import { SyntheticPlatformEmitter } from '@unimodules/core';\nimport { PermissionResponse, PermissionStatus } from 'expo-modules-core';\n\nimport { AVPlaybackNativeSource, AVPlaybackStatus, AVPlaybackStatusToSet } from './AV';\n\nfunction getStatusFromMedia(media?: HTMLMediaElement): AVPlaybackStatus {\n  if (!media) {\n    return {\n      isLoaded: false,\n      error: undefined,\n    };\n  }\n\n  const isPlaying = !!(\n    media.currentTime > 0 &&\n    !media.paused &&\n    !media.ended &&\n    media.readyState > 2\n  );\n\n  const status: AVPlaybackStatus = {\n    isLoaded: true,\n    uri: media.src,\n    progressUpdateIntervalMillis: 100, //TODO: Bacon: Add interval between calls\n    durationMillis: media.duration * 1000,\n    positionMillis: media.currentTime * 1000,\n    // playableDurationMillis: media.buffered * 1000,\n    // seekMillisToleranceBefore?: number\n    // seekMillisToleranceAfter?: number\n    shouldPlay: media.autoplay,\n    isPlaying,\n    isBuffering: false, //media.waiting,\n    rate: media.playbackRate,\n    // TODO: Bacon: This seems too complicated right now: https://webaudio.github.io/web-audio-api/#dom-biquadfilternode-frequency\n    shouldCorrectPitch: false,\n    volume: media.volume,\n    isMuted: media.muted,\n    isLooping: media.loop,\n    didJustFinish: media.ended,\n  };\n\n  return status;\n}\n\nfunction setStatusForMedia(\n  media: HTMLMediaElement,\n  status: AVPlaybackStatusToSet\n): AVPlaybackStatus {\n  if (status.positionMillis !== undefined) {\n    media.currentTime = status.positionMillis / 1000;\n  }\n  // if (status.progressUpdateIntervalMillis !== undefined) {\n  //   media.progressUpdateIntervalMillis = status.progressUpdateIntervalMillis;\n  // }\n  // if (status.seekMillisToleranceBefore !== undefined) {\n  //   media.seekMillisToleranceBefore = status.seekMillisToleranceBefore;\n  // }\n  // if (status.seekMillisToleranceAfter !== undefined) {\n  //   media.seekMillisToleranceAfter = status.seekMillisToleranceAfter;\n  // }\n  // if (status.shouldCorrectPitch !== undefined) {\n  //   media.shouldCorrectPitch = status.shouldCorrectPitch;\n  // }\n  if (status.shouldPlay !== undefined) {\n    if (status.shouldPlay) {\n      media.play();\n    } else {\n      media.pause();\n    }\n  }\n  if (status.rate !== undefined) {\n    media.playbackRate = status.rate;\n  }\n  if (status.volume !== undefined) {\n    media.volume = status.volume;\n  }\n  if (status.isMuted !== undefined) {\n    media.muted = status.isMuted;\n  }\n  if (status.isLooping !== undefined) {\n    media.loop = status.isLooping;\n  }\n\n  return getStatusFromMedia(media);\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentAV';\n  },\n  async getStatusForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async loadForVideo(\n    element: HTMLMediaElement,\n    nativeSource: AVPlaybackNativeSource,\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async unloadForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async setStatusForVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replayVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  /* Audio */\n  async setAudioMode() {},\n  async setAudioIsEnabled() {},\n  async getStatusForSound(element: HTMLMediaElement) {\n    return getStatusFromMedia(element);\n  },\n  async loadForSound(\n    nativeSource: string | { uri: string; [key: string]: any },\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<[HTMLMediaElement, AVPlaybackStatus]> {\n    const source = typeof nativeSource === 'string' ? nativeSource : nativeSource.uri;\n    const media = new Audio(source);\n\n    media.ontimeupdate = () => {\n      SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus', {\n        key: media,\n        status: getStatusFromMedia(media),\n      });\n    };\n\n    media.onerror = () => {\n      SyntheticPlatformEmitter.emit('ExponentAV.onError', {\n        key: media,\n        error: media.error!.message,\n      });\n    };\n\n    const status = setStatusForMedia(media, fullInitialStatus);\n\n    return [media, status];\n  },\n  async unloadForSound(element: HTMLMediaElement) {\n    element.pause();\n    element.removeAttribute('src');\n    element.load();\n    return getStatusFromMedia(element);\n  },\n  async setStatusForSound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replaySound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n\n  /* Recording */\n  //   async setUnloadedCallbackForAndroidRecording() {},\n  async getAudioRecordingStatus() {},\n  async prepareAudioRecorder() {},\n  async startAudioRecording() {},\n  async pauseAudioRecording() {},\n  async stopAudioRecording() {},\n  async unloadAudioRecorder() {},\n\n  // Recording isn't available on the web\n  async getPermissionsAsync(): Promise<PermissionResponse> {\n    return {\n      status: PermissionStatus.DENIED,\n      expires: 'never',\n      canAskAgain: false,\n      granted: false,\n    };\n  },\n\n  // Recording isn't available on the web\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return this.getPermissionsAsync();\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}